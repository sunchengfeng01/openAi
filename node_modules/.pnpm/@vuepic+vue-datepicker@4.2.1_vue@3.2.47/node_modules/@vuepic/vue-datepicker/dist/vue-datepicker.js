import { openBlock as h, createElementBlock as P, createElementVNode as ae, reactive as $t, computed as V, unref as u, ref as U, watch as dt, onMounted as He, nextTick as ct, toRef as It, defineComponent as We, renderSlot as K, createCommentVNode as D, normalizeClass as ge, withKeys as ue, createBlock as me, withModifiers as qe, normalizeStyle as Qe, normalizeProps as Ne, mergeProps as Pe, Fragment as fe, createTextVNode as je, toDisplayString as _e, renderList as Me, createVNode as et, Transition as gt, withCtx as se, onBeforeUpdate as qn, onUnmounted as on, withDirectives as Ct, vShow as _t, createSlots as Ee, isRef as ot, guardReactiveProps as Ue, resolveDynamicComponent as Bn, useSlots as sn, getCurrentScope as Jn, onScopeDispose as Qn, Teleport as ea } from "vue";
import { isBefore as un, isEqual as Yn, isAfter as dn, setHours as Vn, setMinutes as En, setSeconds as Ln, setMilliseconds as cn, parse as an, isValid as Nt, isDate as ta, set as Re, format as wt, getMonth as pe, getDay as na, getYear as ke, getHours as Ze, getMinutes as Xe, getSeconds as yt, parseISO as aa, startOfWeek as hn, endOfWeek as ra, setMonth as Rt, setYear as ut, addDays as mt, add as Fn, addMonths as st, subMonths as bt, getWeek as la, getISOWeek as oa, differenceInCalendarDays as sa, eachDayOfInterval as pn, addYears as ia, subYears as ua, sub as da } from "date-fns";
function Ft() {
  return h(), P(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      ae("path", {
        d: "M29.333 8c0-2.208-1.792-4-4-4h-18.667c-2.208 0-4 1.792-4 4v18.667c0 2.208 1.792 4 4 4h18.667c2.208 0 4-1.792 4-4v-18.667zM26.667 8v18.667c0 0.736-0.597 1.333-1.333 1.333 0 0-18.667 0-18.667 0-0.736 0-1.333-0.597-1.333-1.333 0 0 0-18.667 0-18.667 0-0.736 0.597-1.333 1.333-1.333 0 0 18.667 0 18.667 0 0.736 0 1.333 0.597 1.333 1.333z"
      }),
      ae("path", {
        d: "M20 2.667v5.333c0 0.736 0.597 1.333 1.333 1.333s1.333-0.597 1.333-1.333v-5.333c0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z"
      }),
      ae("path", {
        d: "M9.333 2.667v5.333c0 0.736 0.597 1.333 1.333 1.333s1.333-0.597 1.333-1.333v-5.333c0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z"
      }),
      ae("path", {
        d: "M4 14.667h24c0.736 0 1.333-0.597 1.333-1.333s-0.597-1.333-1.333-1.333h-24c-0.736 0-1.333 0.597-1.333 1.333s0.597 1.333 1.333 1.333z"
      })
    ]
  );
}
function ca() {
  return h(), P(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      ae("path", {
        d: "M23.057 7.057l-16 16c-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0l16-16c0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0z"
      }),
      ae("path", {
        d: "M7.057 8.943l16 16c0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885l-16-16c-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885z"
      })
    ]
  );
}
function kn() {
  return h(), P(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      ae("path", {
        d: "M20.943 23.057l-7.057-7.057c0 0 7.057-7.057 7.057-7.057 0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0l-8 8c-0.521 0.521-0.521 1.365 0 1.885l8 8c0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885z"
      })
    ]
  );
}
function wn() {
  return h(), P(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      ae("path", {
        d: "M12.943 24.943l8-8c0.521-0.521 0.521-1.365 0-1.885l-8-8c-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885l7.057 7.057c0 0-7.057 7.057-7.057 7.057-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0z"
      })
    ]
  );
}
function Un() {
  return h(), P(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      ae("path", {
        d: "M16 1.333c-8.095 0-14.667 6.572-14.667 14.667s6.572 14.667 14.667 14.667c8.095 0 14.667-6.572 14.667-14.667s-6.572-14.667-14.667-14.667zM16 4c6.623 0 12 5.377 12 12s-5.377 12-12 12c-6.623 0-12-5.377-12-12s5.377-12 12-12z"
      }),
      ae("path", {
        d: "M14.667 8v8c0 0.505 0.285 0.967 0.737 1.193l5.333 2.667c0.658 0.329 1.46 0.062 1.789-0.596s0.062-1.46-0.596-1.789l-4.596-2.298c0 0 0-7.176 0-7.176 0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z"
      })
    ]
  );
}
function Hn() {
  return h(), P(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      ae("path", {
        d: "M24.943 19.057l-8-8c-0.521-0.521-1.365-0.521-1.885 0l-8 8c-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0l7.057-7.057c0 0 7.057 7.057 7.057 7.057 0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885z"
      })
    ]
  );
}
function Wn() {
  return h(), P(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      ae("path", {
        d: "M7.057 12.943l8 8c0.521 0.521 1.365 0.521 1.885 0l8-8c0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0l-7.057 7.057c0 0-7.057-7.057-7.057-7.057-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885z"
      })
    ]
  );
}
const bn = (e, n, r) => {
  const t = an(e, n.slice(0, e.length), new Date());
  return Nt(t) && ta(t) ? Re(t, {
    hours: +r.hours,
    minutes: +(r == null ? void 0 : r.minutes),
    seconds: +(r == null ? void 0 : r.seconds),
    milliseconds: 0
  }) : null;
}, fa = (e, n, r) => {
  const t = Array.isArray(r) ? r[0] : r;
  if (typeof n == "string")
    return bn(e, n, t);
  if (Array.isArray(n)) {
    let s = null;
    for (const d of n)
      if (s = bn(e, d, t), s)
        break;
    return s;
  }
  return typeof n == "function" ? n(e) : null;
}, w = (e) => e ? new Date(e) : new Date(), va = (e, n) => {
  if (n) {
    const t = (e.getMonth() + 1).toString().padStart(2, "0"), s = e.getDate().toString().padStart(2, "0"), d = e.getHours().toString().padStart(2, "0"), p = e.getMinutes().toString().padStart(2, "0");
    return `${e.getFullYear()}-${t}-${s}T${d}:${p}:00.000Z`;
  }
  const r = Date.UTC(
    e.getUTCFullYear(),
    e.getUTCMonth(),
    e.getUTCDate(),
    e.getUTCHours(),
    e.getUTCMinutes(),
    e.getUTCSeconds()
  );
  return new Date(r).toISOString();
}, xe = (e) => {
  let n = w(JSON.parse(JSON.stringify(e)));
  return n = Vn(n, 0), n = En(n, 0), n = Ln(n, 0), n = cn(n, 0), n;
}, Fe = (e, n, r, t) => {
  let s = e ? w(e) : w();
  return (n || n === 0) && (s = Vn(s, +n)), (r || r === 0) && (s = En(s, +r)), (t || t === 0) && (s = Ln(s, +t)), cn(s, 0);
}, Oe = (e, n) => !e || !n ? !1 : un(xe(e), xe(n)), be = (e, n) => !e || !n ? !1 : Yn(xe(e), xe(n)), Ve = (e, n) => !e || !n ? !1 : dn(xe(e), xe(n)), zn = (e, n, r) => e && e[0] && e[1] ? Ve(r, e[0]) && Oe(r, e[1]) : e && e[0] && n ? Ve(r, e[0]) && Oe(r, n) || Oe(r, e[0]) && Ve(r, n) : !1, kt = $t({
  menuFocused: !1,
  shiftKeyInMenu: !1
}), Kn = () => {
  const e = (t) => {
    kt.menuFocused = t;
  }, n = (t) => {
    kt.shiftKeyInMenu !== t && (kt.shiftKeyInMenu = t);
  };
  return {
    control: V(() => ({ shiftKeyInMenu: kt.shiftKeyInMenu, menuFocused: kt.menuFocused })),
    setMenuFocused: e,
    setShiftKey: n
  };
};
function fn(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var Bt = {}, ma = {
  get exports() {
    return Bt;
  },
  set exports(e) {
    Bt = e;
  }
};
(function(e, n) {
  Object.defineProperty(n, "__esModule", {
    value: !0
  }), n.default = r;
  function r(t) {
    if (t === null || t === !0 || t === !1)
      return NaN;
    var s = Number(t);
    return isNaN(s) ? s : s < 0 ? Math.ceil(s) : Math.floor(s);
  }
  e.exports = n.default;
})(ma, Bt);
const ya = /* @__PURE__ */ fn(Bt);
var Yt = {}, ga = {
  get exports() {
    return Yt;
  },
  set exports(e) {
    Yt = e;
  }
};
(function(e, n) {
  Object.defineProperty(n, "__esModule", {
    value: !0
  }), n.default = r;
  function r(t) {
    var s = new Date(Date.UTC(t.getFullYear(), t.getMonth(), t.getDate(), t.getHours(), t.getMinutes(), t.getSeconds(), t.getMilliseconds()));
    return s.setUTCFullYear(t.getFullYear()), t.getTime() - s.getTime();
  }
  e.exports = n.default;
})(ga, Yt);
const Dn = /* @__PURE__ */ fn(Yt);
function ha(e, n) {
  var r = ba(n);
  return r.formatToParts ? ka(r, e) : wa(r, e);
}
var pa = {
  year: 0,
  month: 1,
  day: 2,
  hour: 3,
  minute: 4,
  second: 5
};
function ka(e, n) {
  try {
    for (var r = e.formatToParts(n), t = [], s = 0; s < r.length; s++) {
      var d = pa[r[s].type];
      d >= 0 && (t[d] = parseInt(r[s].value, 10));
    }
    return t;
  } catch (p) {
    if (p instanceof RangeError)
      return [NaN];
    throw p;
  }
}
function wa(e, n) {
  var r = e.format(n).replace(/\u200E/g, ""), t = /(\d+)\/(\d+)\/(\d+),? (\d+):(\d+):(\d+)/.exec(r);
  return [t[3], t[1], t[2], t[4], t[5], t[6]];
}
var xt = {};
function ba(e) {
  if (!xt[e]) {
    var n = new Intl.DateTimeFormat("en-US", {
      hour12: !1,
      timeZone: "America/New_York",
      year: "numeric",
      month: "numeric",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    }).format(new Date("2014-06-25T04:00:00.123Z")), r = n === "06/25/2014, 00:00:00" || n === "‎06‎/‎25‎/‎2014‎ ‎00‎:‎00‎:‎00";
    xt[e] = r ? new Intl.DateTimeFormat("en-US", {
      hour12: !1,
      timeZone: e,
      year: "numeric",
      month: "numeric",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    }) : new Intl.DateTimeFormat("en-US", {
      hourCycle: "h23",
      timeZone: e,
      year: "numeric",
      month: "numeric",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    });
  }
  return xt[e];
}
function vn(e, n, r, t, s, d, p) {
  var C = new Date(0);
  return C.setUTCFullYear(e, n, r), C.setUTCHours(t, s, d, p), C;
}
var $n = 36e5, Da = 6e4, Gt = {
  timezone: /([Z+-].*)$/,
  timezoneZ: /^(Z)$/,
  timezoneHH: /^([+-]\d{2})$/,
  timezoneHHMM: /^([+-]\d{2}):?(\d{2})$/
};
function mn(e, n, r) {
  var t, s;
  if (!e || (t = Gt.timezoneZ.exec(e), t))
    return 0;
  var d;
  if (t = Gt.timezoneHH.exec(e), t)
    return d = parseInt(t[1], 10), Mn(d) ? -(d * $n) : NaN;
  if (t = Gt.timezoneHHMM.exec(e), t) {
    d = parseInt(t[1], 10);
    var p = parseInt(t[2], 10);
    return Mn(d, p) ? (s = Math.abs(d) * $n + p * Da, d > 0 ? -s : s) : NaN;
  }
  if (Ta(e)) {
    n = new Date(n || Date.now());
    var C = r ? n : $a(n), I = rn(C, e), b = r ? I : Ma(n, I, e);
    return -b;
  }
  return NaN;
}
function $a(e) {
  return vn(
    e.getFullYear(),
    e.getMonth(),
    e.getDate(),
    e.getHours(),
    e.getMinutes(),
    e.getSeconds(),
    e.getMilliseconds()
  );
}
function rn(e, n) {
  var r = ha(e, n), t = vn(
    r[0],
    r[1] - 1,
    r[2],
    r[3] % 24,
    r[4],
    r[5],
    0
  ).getTime(), s = e.getTime(), d = s % 1e3;
  return s -= d >= 0 ? d : 1e3 + d, t - s;
}
function Ma(e, n, r) {
  var t = e.getTime(), s = t - n, d = rn(new Date(s), r);
  if (n === d)
    return n;
  s -= d - n;
  var p = rn(new Date(s), r);
  return d === p ? d : Math.max(d, p);
}
function Mn(e, n) {
  return -23 <= e && e <= 23 && (n == null || 0 <= n && n <= 59);
}
var Tn = {};
function Ta(e) {
  if (Tn[e])
    return !0;
  try {
    return new Intl.DateTimeFormat(void 0, { timeZone: e }), Tn[e] = !0, !0;
  } catch {
    return !1;
  }
}
var Aa = /(Z|[+-]\d{2}(?::?\d{2})?| UTC| [a-zA-Z]+\/[a-zA-Z_]+(?:\/[a-zA-Z_]+)?)$/;
const jn = Aa;
var Zt = 36e5, An = 6e4, Sa = 2, Ye = {
  dateTimePattern: /^([0-9W+-]+)(T| )(.*)/,
  datePattern: /^([0-9W+-]+)(.*)/,
  plainTime: /:/,
  // year tokens
  YY: /^(\d{2})$/,
  YYY: [
    /^([+-]\d{2})$/,
    // 0 additional digits
    /^([+-]\d{3})$/,
    // 1 additional digit
    /^([+-]\d{4})$/
    // 2 additional digits
  ],
  YYYY: /^(\d{4})/,
  YYYYY: [
    /^([+-]\d{4})/,
    // 0 additional digits
    /^([+-]\d{5})/,
    // 1 additional digit
    /^([+-]\d{6})/
    // 2 additional digits
  ],
  // date tokens
  MM: /^-(\d{2})$/,
  DDD: /^-?(\d{3})$/,
  MMDD: /^-?(\d{2})-?(\d{2})$/,
  Www: /^-?W(\d{2})$/,
  WwwD: /^-?W(\d{2})-?(\d{1})$/,
  HH: /^(\d{2}([.,]\d*)?)$/,
  HHMM: /^(\d{2}):?(\d{2}([.,]\d*)?)$/,
  HHMMSS: /^(\d{2}):?(\d{2}):?(\d{2}([.,]\d*)?)$/,
  // time zone tokens (to identify the presence of a tz)
  timeZone: jn
};
function ln(e, n) {
  if (arguments.length < 1)
    throw new TypeError("1 argument required, but only " + arguments.length + " present");
  if (e === null)
    return new Date(NaN);
  var r = n || {}, t = r.additionalDigits == null ? Sa : ya(r.additionalDigits);
  if (t !== 2 && t !== 1 && t !== 0)
    throw new RangeError("additionalDigits must be 0, 1 or 2");
  if (e instanceof Date || typeof e == "object" && Object.prototype.toString.call(e) === "[object Date]")
    return new Date(e.getTime());
  if (typeof e == "number" || Object.prototype.toString.call(e) === "[object Number]")
    return new Date(e);
  if (!(typeof e == "string" || Object.prototype.toString.call(e) === "[object String]"))
    return new Date(NaN);
  var s = Pa(e), d = Ca(s.date, t), p = d.year, C = d.restDateString, I = _a(C, p);
  if (isNaN(I))
    return new Date(NaN);
  if (I) {
    var b = I.getTime(), L = 0, $;
    if (s.time && (L = Na(s.time), isNaN(L)))
      return new Date(NaN);
    if (s.timeZone || r.timeZone) {
      if ($ = mn(s.timeZone || r.timeZone, new Date(b + L)), isNaN($))
        return new Date(NaN);
    } else
      $ = Dn(new Date(b + L)), $ = Dn(new Date(b + L + $));
    return new Date(b + L + $);
  } else
    return new Date(NaN);
}
function Pa(e) {
  var n = {}, r = Ye.dateTimePattern.exec(e), t;
  if (r ? (n.date = r[1], t = r[3]) : (r = Ye.datePattern.exec(e), r ? (n.date = r[1], t = r[2]) : (n.date = null, t = e)), t) {
    var s = Ye.timeZone.exec(t);
    s ? (n.time = t.replace(s[1], ""), n.timeZone = s[1].trim()) : n.time = t;
  }
  return n;
}
function Ca(e, n) {
  var r = Ye.YYY[n], t = Ye.YYYYY[n], s;
  if (s = Ye.YYYY.exec(e) || t.exec(e), s) {
    var d = s[1];
    return {
      year: parseInt(d, 10),
      restDateString: e.slice(d.length)
    };
  }
  if (s = Ye.YY.exec(e) || r.exec(e), s) {
    var p = s[1];
    return {
      year: parseInt(p, 10) * 100,
      restDateString: e.slice(p.length)
    };
  }
  return {
    year: null
  };
}
function _a(e, n) {
  if (n === null)
    return null;
  var r, t, s, d;
  if (e.length === 0)
    return t = new Date(0), t.setUTCFullYear(n), t;
  if (r = Ye.MM.exec(e), r)
    return t = new Date(0), s = parseInt(r[1], 10) - 1, Pn(n, s) ? (t.setUTCFullYear(n, s), t) : new Date(NaN);
  if (r = Ye.DDD.exec(e), r) {
    t = new Date(0);
    var p = parseInt(r[1], 10);
    return Ia(n, p) ? (t.setUTCFullYear(n, 0, p), t) : new Date(NaN);
  }
  if (r = Ye.MMDD.exec(e), r) {
    t = new Date(0), s = parseInt(r[1], 10) - 1;
    var C = parseInt(r[2], 10);
    return Pn(n, s, C) ? (t.setUTCFullYear(n, s, C), t) : new Date(NaN);
  }
  if (r = Ye.Www.exec(e), r)
    return d = parseInt(r[1], 10) - 1, Cn(n, d) ? Sn(n, d) : new Date(NaN);
  if (r = Ye.WwwD.exec(e), r) {
    d = parseInt(r[1], 10) - 1;
    var I = parseInt(r[2], 10) - 1;
    return Cn(n, d, I) ? Sn(n, d, I) : new Date(NaN);
  }
  return null;
}
function Na(e) {
  var n, r, t;
  if (n = Ye.HH.exec(e), n)
    return r = parseFloat(n[1].replace(",", ".")), Xt(r) ? r % 24 * Zt : NaN;
  if (n = Ye.HHMM.exec(e), n)
    return r = parseInt(n[1], 10), t = parseFloat(n[2].replace(",", ".")), Xt(r, t) ? r % 24 * Zt + t * An : NaN;
  if (n = Ye.HHMMSS.exec(e), n) {
    r = parseInt(n[1], 10), t = parseInt(n[2], 10);
    var s = parseFloat(n[3].replace(",", "."));
    return Xt(r, t, s) ? r % 24 * Zt + t * An + s * 1e3 : NaN;
  }
  return null;
}
function Sn(e, n, r) {
  n = n || 0, r = r || 0;
  var t = new Date(0);
  t.setUTCFullYear(e, 0, 4);
  var s = t.getUTCDay() || 7, d = n * 7 + r + 1 - s;
  return t.setUTCDate(t.getUTCDate() + d), t;
}
var Ra = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], Oa = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
function xn(e) {
  return e % 400 === 0 || e % 4 === 0 && e % 100 !== 0;
}
function Pn(e, n, r) {
  if (n < 0 || n > 11)
    return !1;
  if (r != null) {
    if (r < 1)
      return !1;
    var t = xn(e);
    if (t && r > Oa[n] || !t && r > Ra[n])
      return !1;
  }
  return !0;
}
function Ia(e, n) {
  if (n < 1)
    return !1;
  var r = xn(e);
  return !(r && n > 366 || !r && n > 365);
}
function Cn(e, n, r) {
  return !(n < 0 || n > 52 || r != null && (r < 0 || r > 6));
}
function Xt(e, n, r) {
  return !(e != null && (e < 0 || e >= 25) || n != null && (n < 0 || n >= 60) || r != null && (r < 0 || r >= 60));
}
var Vt = {}, Ba = {
  get exports() {
    return Vt;
  },
  set exports(e) {
    Vt = e;
  }
}, Et = {}, Ya = {
  get exports() {
    return Et;
  },
  set exports(e) {
    Et = e;
  }
};
(function(e, n) {
  Object.defineProperty(n, "__esModule", {
    value: !0
  }), n.default = r;
  function r(t, s) {
    if (t == null)
      throw new TypeError("assign requires that input parameter not be null or undefined");
    for (var d in s)
      Object.prototype.hasOwnProperty.call(s, d) && (t[d] = s[d]);
    return t;
  }
  e.exports = n.default;
})(Ya, Et);
(function(e, n) {
  Object.defineProperty(n, "__esModule", {
    value: !0
  }), n.default = s;
  var r = t(Et);
  function t(d) {
    return d && d.__esModule ? d : { default: d };
  }
  function s(d) {
    return (0, r.default)({}, d);
  }
  e.exports = n.default;
})(Ba, Vt);
const Va = /* @__PURE__ */ fn(Vt);
function Ea(e, n, r) {
  var t = ln(e, r), s = mn(n, t, !0), d = new Date(t.getTime() - s), p = new Date(0);
  return p.setFullYear(d.getUTCFullYear(), d.getUTCMonth(), d.getUTCDate()), p.setHours(d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(), d.getUTCMilliseconds()), p;
}
function La(e, n, r) {
  if (typeof e == "string" && !e.match(jn)) {
    var t = Va(r);
    return t.timeZone = n, ln(e, t);
  }
  var s = ln(e, r), d = vn(
    s.getFullYear(),
    s.getMonth(),
    s.getDate(),
    s.getHours(),
    s.getMinutes(),
    s.getSeconds(),
    s.getMilliseconds()
  ).getTime(), p = mn(n, new Date(d));
  return new Date(d + p);
}
const Fa = (e, n = 3) => {
  const r = [];
  for (let t = 0; t < e.length; t += n)
    r.push([e[t], e[t + 1], e[t + 2]]);
  return r;
}, Ua = (e, n) => {
  const r = [1, 2, 3, 4, 5, 6, 7].map((d) => new Intl.DateTimeFormat(e, { weekday: "short", timeZone: "UTC" }).format(new Date(`2017-01-0${d}T00:00:00+00:00`)).slice(0, 2)), t = r.slice(0, n), s = r.slice(n + 1, r.length);
  return [r[n]].concat(...s).concat(...t);
}, Ha = (e) => {
  const n = [];
  for (let r = +e[0]; r <= +e[1]; r++)
    n.push({ value: +r, text: `${r}` });
  return n;
}, Wa = (e, n) => {
  const r = new Intl.DateTimeFormat(e, { month: n, timeZone: "UTC" });
  return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map((s) => {
    const d = s < 10 ? `0${s}` : s;
    return new Date(`2017-${d}-01T00:00:00+00:00`);
  }).map((s, d) => ({
    text: r.format(s),
    value: d
  }));
}, za = (e) => [12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][e], Te = (e) => {
  const n = u(e);
  return n != null && n.$el ? n == null ? void 0 : n.$el : n;
}, Ka = (e) => Object.assign({ type: "dot" }, e), Gn = (e) => Array.isArray(e) ? !!e[0] && !!e[1] : !1, Lt = {
  prop: (e) => `"${e}" prop must be enabled!`,
  dateArr: (e) => `You need to use array as "model-value" binding in order to support "${e}"`
}, Se = (e) => e, _n = (e) => e === 0 ? e : !e || isNaN(+e) ? null : +e, Nn = (e) => Object.assign(
  {
    menuAppear: "dp-menu-appear",
    open: "dp-slide-down",
    close: "dp-slide-up",
    next: "calendar-next",
    previous: "calendar-prev",
    vNext: "dp-slide-up",
    vPrevious: "dp-slide-down"
  },
  e
), ja = (e) => Object.assign(
  {
    toggleOverlay: "Toggle overlay",
    menu: "Datepicker menu",
    input: "Datepicker input",
    calendarWrap: "Calendar wrapper",
    calendarDays: "Calendar days",
    openTimePicker: "Open time picker",
    closeTimePicker: "Close time Picker",
    incrementValue: (n) => `Increment ${n}`,
    decrementValue: (n) => `Decrement ${n}`,
    openTpOverlay: (n) => `Open ${n} overlay`,
    amPmButton: "Switch AM/PM mode",
    openYearsOverlay: "Open years overlay",
    openMonthsOverlay: "Open months overlay",
    nextMonth: "Next month",
    prevMonth: "Previous month",
    day: () => ""
  },
  e
), xa = (e) => e === null ? 0 : typeof e == "boolean" ? e ? 2 : 0 : +e >= 2 ? +e : 2, Ga = (e, n, r) => e || (typeof r == "string" ? r : n), Za = (e) => typeof e == "boolean" ? e ? Nn({}) : !1 : Nn(e), Xa = () => ({
  enterSubmit: !0,
  tabSubmit: !0,
  openMenu: !0,
  rangeSeparator: " - "
}), qa = (e) => Object.assign({ months: [], years: [], times: { hours: [], minutes: [], seconds: [] } }, e), Le = (e) => {
  const n = () => {
    if (e.partialRange)
      return null;
    throw new Error(Lt.prop("partial-range"));
  }, r = V(() => ({
    ariaLabels: ja(e.ariaLabels),
    textInputOptions: Object.assign(Xa(), e.textInputOptions),
    multiCalendars: xa(e.multiCalendars),
    previewFormat: Ga(e.previewFormat, e.format, d()),
    filters: qa(e.filters),
    transitions: Za(e.transitions),
    startTime: f()
  })), t = (a) => {
    if (e.range)
      return a();
    throw new Error(Lt.prop("range"));
  }, s = () => {
    const a = e.enableSeconds ? ":ss" : "";
    return e.is24 ? `HH:mm${a}` : `hh:mm${a} aa`;
  }, d = () => e.format ? e.format : e.monthPicker ? "MM/yyyy" : e.timePicker ? s() : e.weekPicker ? "MM/dd/yyyy" : e.yearPicker ? "yyyy" : e.enableTimePicker ? `MM/dd/yyyy, ${s()}` : "MM/dd/yyyy", p = (a, m) => {
    if (typeof e.format == "function")
      return e.format(a);
    const y = m || d(), A = e.formatLocale ? { locale: e.formatLocale } : void 0;
    return Array.isArray(a) ? `${wt(a[0], y, A)} ${e.modelAuto && !a[1] ? "" : r.value.textInputOptions.rangeSeparator || "-"} ${a[1] ? wt(a[1], y, A) : ""}` : wt(a, y, A);
  }, C = (a) => e.timezone ? Ea(a, e.timezone) : a, I = (a) => e.timezone ? La(a, e.timezone) : a, b = V(() => (a) => {
    var m;
    return (m = e.hideNavigation) == null ? void 0 : m.includes(a);
  }), L = (a) => {
    const m = e.maxDate ? Ve(C(a), C(w(e.maxDate))) : !1, y = e.minDate ? Oe(C(a), C(w(e.minDate))) : !1, A = O(a, e.disabledDates), N = r.value.filters.months.map((ee) => +ee).includes(pe(a)), ce = e.disabledWeekDays.length ? e.disabledWeekDays.some((ee) => +ee === na(a)) : !1, v = e.allowedDates.length ? !e.allowedDates.some((ee) => be(C(w(ee)), C(a))) : !1, o = ke(a), Z = o < +e.yearRange[0] || o > +e.yearRange[1];
    return !(m || y || A || N || Z || ce || v);
  }, $ = (a) => {
    const m = {
      hours: Ze(w()),
      minutes: Xe(w()),
      seconds: e.enableSeconds ? yt(w()) : 0
    };
    return Object.assign(m, a);
  }, f = () => e.range ? e.startTime && Array.isArray(e.startTime) ? [$(e.startTime[0]), $(e.startTime[1])] : null : e.startTime && !Array.isArray(e.startTime) ? $(e.startTime) : null, M = (a) => !L(a), H = (a) => Array.isArray(a) ? Nt(a[0]) && (a[1] ? Nt(a[1]) : !0) : a ? Nt(a) : !1, B = (a) => a instanceof Date ? a : aa(a), J = (a) => {
    const m = hn(C(a), { weekStartsOn: +e.weekStart }), y = ra(C(a), { weekStartsOn: +e.weekStart });
    return [m, y];
  }, O = (a, m) => Array.isArray(m) ? m.some((y) => be(C(w(y)), C(a))) : m(a), E = (a, m, y) => {
    let A = a ? w(a) : w();
    return (m || m === 0) && (A = Rt(A, m)), y && (A = ut(A, y)), A;
  }, S = (a) => Re(w(), { hours: Ze(a), minutes: Xe(a), seconds: yt(a) }), G = (a) => Re(w(), {
    hours: +a.hours || 0,
    minutes: +a.minutes || 0,
    seconds: +a.seconds || 0
  }), le = (a, m, y, A) => {
    if (!a)
      return !0;
    if (A) {
      const j = y === "max" ? un(a, m) : dn(a, m), N = { seconds: 0, milliseconds: 0 };
      return j || Yn(Re(a, N), Re(m, N));
    }
    return y === "max" ? a.getTime() <= m.getTime() : a.getTime() >= m.getTime();
  }, oe = () => !e.enableTimePicker || e.monthPicker || e.yearPicker || e.ignoreTimeValidation, de = (a) => Array.isArray(a) ? [a[0] ? S(a[0]) : null, a[1] ? S(a[1]) : null] : S(a), T = (a) => {
    const m = e.maxTime ? G(e.maxTime) : w(e.maxDate);
    return Array.isArray(a) ? le(a[0], m, "max", !!e.maxDate) && le(a[1], m, "max", !!e.maxDate) : le(a, m, "max", !!e.maxDate);
  }, Y = (a, m) => {
    const y = e.minTime ? G(e.minTime) : w(e.minDate);
    return Array.isArray(a) ? le(a[0], y, "min", !!e.minDate) && le(a[1], y, "min", !!e.minDate) && m : le(a, y, "min", !!e.minDate) && m;
  }, F = (a) => {
    let m = !0;
    if (!a || oe())
      return !0;
    const y = !e.minDate && !e.maxDate ? de(a) : a;
    return (e.maxTime || e.maxDate) && (m = T(Se(y))), (e.minTime || e.minDate) && (m = Y(Se(y), m)), m;
  }, c = (a, m) => {
    const y = w(JSON.parse(JSON.stringify(a))), A = [];
    for (let j = 0; j < 7; j++) {
      const N = mt(y, j), ce = pe(N) !== m;
      A.push({
        text: e.hideOffsetDates && ce ? "" : N.getDate(),
        value: N,
        current: !ce,
        classData: {}
      });
    }
    return A;
  }, _ = (a, m) => {
    const y = [], A = w(C(new Date(m, a))), j = w(C(new Date(m, a + 1, 0))), N = hn(A, { weekStartsOn: e.weekStart }), ce = (v) => {
      const o = c(v, a);
      if (y.push({ days: o }), !y[y.length - 1].days.some(
        (Z) => be(xe(Z.value), xe(j))
      )) {
        const Z = mt(v, 7);
        ce(Z);
      }
    };
    if (ce(N), e.sixWeeks && y.length < 6) {
      const v = 6 - y.length;
      for (let o = 1; o <= v; o++) {
        const Z = y[y.length - 1], ee = Z.days[Z.days.length - 1], we = c(mt(ee.value, 1), pe(A));
        y.push({ days: we });
      }
    }
    return y;
  }, W = (a, m, y) => [Re(w(a), { date: 1 }), Re(w(), { month: m, year: y, date: 1 })], q = (a, m) => Oe(...W(e.minDate, a, m)) || be(...W(e.minDate, a, m)), te = (a, m) => Ve(...W(e.maxDate, a, m)) || be(...W(e.maxDate, a, m)), R = (a, m, y) => {
    let A = !1;
    return e.maxDate && y && te(a, m) && (A = !0), e.minDate && !y && q(a, m) && (A = !0), A;
  };
  return {
    checkPartialRangeValue: n,
    checkRangeEnabled: t,
    getZonedDate: C,
    getZonedToUtc: I,
    formatDate: p,
    getDefaultPattern: d,
    validateDate: L,
    getDefaultStartTime: f,
    isDisabled: M,
    isValidDate: H,
    sanitizeDate: B,
    getWeekFromDate: J,
    matchDate: O,
    setDateMonthOrYear: E,
    isValidTime: F,
    getCalendarDays: _,
    validateMonthYearInRange: (a, m, y, A) => {
      let j = !1;
      return A ? e.minDate && e.maxDate ? j = R(a, m, y) : (e.minDate && q(a, m) || e.maxDate && te(a, m)) && (j = !0) : j = !0, j;
    },
    validateMaxDate: te,
    validateMinDate: q,
    assignDefaultTime: $,
    defaults: r,
    hideNavigationButtons: b
  };
}, he = $t({
  monthYear: [],
  calendar: [],
  time: [],
  actionRow: [],
  selectionGrid: [],
  timePicker: {
    0: [],
    1: []
  },
  monthPicker: []
}), qt = U(null), Pt = U(!1), Jt = U(!1), Qt = U(!1), en = U(!1), Be = U(0), Ce = U(0), tt = () => {
  const e = V(() => Pt.value ? [...he.selectionGrid, he.actionRow].filter((O) => O.length) : Jt.value ? [
    ...he.timePicker[0],
    ...he.timePicker[1],
    en.value ? [] : [qt.value],
    he.actionRow
  ].filter((O) => O.length) : Qt.value ? [...he.monthPicker, he.actionRow] : [he.monthYear, ...he.calendar, he.time, he.actionRow].filter((O) => O.length)), n = (O) => {
    Be.value = O ? Be.value + 1 : Be.value - 1;
    let E = null;
    e.value[Ce.value] && (E = e.value[Ce.value][Be.value]), E || (Be.value = O ? Be.value - 1 : Be.value + 1);
  }, r = (O) => {
    if (Ce.value === 0 && !O || Ce.value === e.value.length && O)
      return;
    Ce.value = O ? Ce.value + 1 : Ce.value - 1, e.value[Ce.value] ? e.value[Ce.value] && !e.value[Ce.value][Be.value] && Be.value !== 0 && (Be.value = e.value[Ce.value].length - 1) : Ce.value = O ? Ce.value - 1 : Ce.value + 1;
  }, t = (O) => {
    let E = null;
    e.value[Ce.value] && (E = e.value[Ce.value][Be.value]), E ? E.focus({ preventScroll: !Pt.value }) : Be.value = O ? Be.value - 1 : Be.value + 1;
  }, s = () => {
    n(!0), t(!0);
  }, d = () => {
    n(!1), t(!1);
  }, p = () => {
    r(!1), t(!0);
  }, C = () => {
    r(!0), t(!0);
  }, I = (O, E) => {
    he[E] = O;
  }, b = (O, E) => {
    he[E] = O;
  }, L = () => {
    Be.value = 0, Ce.value = 0;
  };
  return {
    buildMatrix: I,
    buildMultiLevelMatrix: b,
    setTimePickerBackRef: (O) => {
      qt.value = O;
    },
    setSelectionGrid: (O) => {
      Pt.value = O, L(), O || (he.selectionGrid = []);
    },
    setTimePicker: (O, E = !1) => {
      Jt.value = O, en.value = E, L(), O || (he.timePicker[0] = [], he.timePicker[1] = []);
    },
    setTimePickerElements: (O, E = 0) => {
      he.timePicker[E] = O;
    },
    arrowRight: s,
    arrowLeft: d,
    arrowUp: p,
    arrowDown: C,
    clearArrowNav: () => {
      he.monthYear = [], he.calendar = [], he.time = [], he.actionRow = [], he.selectionGrid = [], he.timePicker[0] = [], he.timePicker[1] = [], Pt.value = !1, Jt.value = !1, en.value = !1, Qt.value = !1, L(), qt.value = null;
    },
    setMonthPicker: (O) => {
      Qt.value = O, L();
    },
    refSets: he
    // exposed for testing
  };
}, Rn = (e) => Array.isArray(e), lt = (e) => Array.isArray(e), On = (e) => Array.isArray(e) && e.length === 2, Ja = (e, n, r, t, s) => {
  const {
    getDefaultStartTime: d,
    isDisabled: p,
    sanitizeDate: C,
    getWeekFromDate: I,
    setDateMonthOrYear: b,
    validateMonthYearInRange: L,
    defaults: $
  } = Le(e), f = V({
    get: () => e.internalModelValue,
    set: (i) => {
      !e.readonly && !e.disabled && n("update:internal-model-value", i);
    }
  }), M = U([]);
  dt(f, () => {
    le();
  });
  const H = U([{ month: pe(w()), year: ke(w()) }]), B = $t({
    hours: e.range ? [Ze(w()), Ze(w())] : Ze(w()),
    minutes: e.range ? [Xe(w()), Xe(w())] : Xe(w()),
    seconds: e.range ? [0, 0] : 0
  }), J = V(
    () => (i) => H.value[i] ? H.value[i].month : 0
  ), O = V(
    () => (i) => H.value[i] ? H.value[i].year : 0
  ), E = V(() => e.flow && e.flow.length && !e.partialFlow ? s.value === e.flow.length : !0), S = (i, k, x) => {
    var Q, De;
    H.value[i] || (H.value[i] = { month: 0, year: 0 }), H.value[i].month = k === null ? (Q = H.value[i]) == null ? void 0 : Q.month : k, H.value[i].year = x === null ? (De = H.value[i]) == null ? void 0 : De.year : x;
  }, G = (i, k) => {
    B[i] = k;
  };
  He(() => {
    f.value || (e.startDate && (S(0, pe(w(e.startDate)), ke(w(e.startDate))), $.value.multiCalendars && ye(0)), $.value.startTime && te()), le(!0);
  });
  const le = (i = !1) => {
    if (f.value)
      return Array.isArray(f.value) ? (M.value = f.value, F(i)) : de(f.value);
    if (e.timePicker)
      return c();
    if (e.monthPicker && !e.range)
      return _();
    if (e.yearPicker && !e.range)
      return W();
    if ($.value.multiCalendars && i && !e.startDate)
      return oe(w(), i);
  }, oe = (i, k = !1) => {
    if ((!$.value.multiCalendars || !e.multiStatic || k) && S(0, pe(i), ke(i)), $.value.multiCalendars)
      for (let x = 1; x < $.value.multiCalendars; x++) {
        const Q = Re(w(), { month: J.value(x - 1), year: O.value(x - 1) }), De = Fn(Q, { months: 1 });
        H.value[x] = { month: pe(De), year: ke(De) };
      }
  }, de = (i) => {
    oe(i), G("hours", Ze(i)), G("minutes", Xe(i)), G("seconds", yt(i));
  }, T = (i, k) => {
    oe(i[0], k);
    const x = (Q, De) => [
      Q(i[0]),
      i[1] ? Q(i[1]) : B[De][1]
    ];
    G("hours", x(Ze, "hours")), G("minutes", x(Xe, "minutes")), G("seconds", x(yt, "seconds"));
  }, Y = (i, k) => {
    if ((e.range || e.weekPicker) && !e.multiDates)
      return T(i, k);
    if (e.multiDates) {
      const x = i[i.length - 1];
      return de(x);
    }
  }, F = (i) => {
    const k = f.value;
    Y(k, i), $.value.multiCalendars && e.multiCalendarsSolo && l();
  }, c = () => {
    if (te(), !e.range)
      f.value = Fe(w(), B.hours, B.minutes, q());
    else {
      const i = B.hours, k = B.minutes;
      f.value = [
        Fe(w(), i[0], k[0], q()),
        Fe(w(), i[1], k[1], q(!1))
      ];
    }
  }, _ = () => {
    f.value = b(w(), J.value(0), O.value(0));
  }, W = () => {
    f.value = w();
  }, q = (i = !0) => e.enableSeconds ? Array.isArray(B.seconds) ? i ? B.seconds[0] : B.seconds[1] : B.seconds : 0, te = () => {
    const i = d();
    if (i) {
      const k = Array.isArray(i), x = k ? [+i[0].hours, +i[1].hours] : +i.hours, Q = k ? [+i[0].minutes, +i[1].minutes] : +i.minutes, De = k ? [+i[0].seconds, +i[1].seconds] : +i.seconds;
      G("hours", x), G("minutes", Q), e.enableSeconds && G("seconds", De);
    }
  }, R = () => Array.isArray(f.value) && f.value.length ? f.value[f.value.length - 1] : null, l = () => {
    if (Array.isArray(f.value) && f.value.length === 2) {
      const i = w(
        w(f.value[1] ? f.value[1] : st(f.value[0], 1))
      ), [k, x] = [pe(f.value[0]), ke(f.value[0])], [Q, De] = [pe(f.value[1]), ke(f.value[1])];
      (k !== Q || k === Q && x !== De) && e.multiCalendarsSolo && S(1, pe(i), ke(i));
    }
  }, a = (i) => {
    const k = st(i, 1);
    return { month: pe(k), year: ke(k) };
  }, m = (i) => {
    const k = pe(w(i)), x = ke(w(i));
    if (S(0, k, x), $.value.multiCalendars > 0)
      for (let Q = 1; Q < $.value.multiCalendars; Q++) {
        const De = a(
          Re(w(i), { year: J.value(Q - 1), month: O.value(Q - 1) })
        );
        S(Q, De.month, De.year);
      }
  }, y = (i) => {
    if (f.value && Array.isArray(f.value))
      if (f.value.some((k) => be(i, k))) {
        const k = f.value.filter((x) => !be(x, i));
        f.value = k.length ? k : null;
      } else
        (e.multiDatesLimit && +e.multiDatesLimit > f.value.length || !e.multiDatesLimit) && f.value.push(i);
    else
      f.value = [i];
  }, A = (i, k) => {
    const x = Ve(i, k) ? k : i, Q = Ve(k, i) ? k : i;
    return pn({ start: x, end: Q });
  }, j = (i, k = 0) => {
    if (Array.isArray(f.value) && f.value[k]) {
      const x = sa(i, f.value[k]), Q = A(f.value[k], i), De = Q.length === 1 ? 0 : Q.filter((z) => p(z)).length, g = Math.abs(x) - De;
      if (e.minRange && e.maxRange)
        return g >= +e.minRange && g <= +e.maxRange;
      if (e.minRange)
        return g >= +e.minRange;
      if (e.maxRange)
        return g <= +e.maxRange;
    }
    return !0;
  }, N = (i) => Array.isArray(f.value) && f.value.length === 2 ? e.fixedStart && (Ve(i, f.value[0]) || be(i, f.value[0])) ? [f.value[0], i] : e.fixedEnd && (Oe(i, f.value[1]) || be(i, f.value[1])) ? [i, f.value[1]] : (n("invalid-fixed-range", i), f.value) : [], ce = () => {
    e.autoApply && E.value && n("auto-apply", e.partialFlow);
  }, v = () => {
    e.autoApply && n("select-date");
  }, o = (i) => !pn({ start: i[0], end: i[1] }).some((x) => p(x)), Z = (i) => (f.value = I(w(i.value)), ce()), ee = (i) => {
    const k = Fe(w(i.value), B.hours, B.minutes, q());
    e.multiDates ? y(k) : f.value = k, r(), ce();
  }, we = () => {
    M.value = f.value ? f.value.slice() : [], M.value.length === 2 && !(e.fixedStart || e.fixedEnd) && (M.value = []);
  }, ze = (i, k) => {
    const x = [w(i.value), mt(w(i.value), +e.autoRange)];
    o(x) && (k && m(i.value), M.value = x);
  }, Je = (i) => {
    re(i.value) || !j(i.value, e.fixedStart ? 0 : 1) || (M.value = N(w(i.value)));
  }, re = (i) => e.noDisabledRange ? A(M.value[0], i).some((x) => p(x)) : !1, Ge = (i, k) => {
    if (we(), e.autoRange)
      return ze(i, k);
    if (e.fixedStart || e.fixedEnd)
      return Je(i);
    M.value[0] ? j(w(i.value)) && !re(i.value) && (Oe(w(i.value), w(M.value[0])) ? M.value.unshift(w(i.value)) : M.value[1] = w(i.value)) : M.value[0] = w(i.value);
  }, Ke = (i) => {
    M.value[i] = Fe(
      M.value[i],
      B.hours[i],
      B.minutes[i],
      q(i !== 1)
    );
  }, Ie = () => {
    M.value.length && (M.value[0] && !M.value[1] ? Ke(0) : (Ke(0), Ke(1), r()), f.value = M.value.slice(), M.value[0] && M.value[1] && e.autoApply && n("auto-apply"), M.value[0] && !M.value[1] && e.modelAuto && e.autoApply && n("auto-apply"));
  }, ht = (i, k = !1) => {
    if (!(p(i.value) || !i.current && e.hideOffsetDates)) {
      if (e.weekPicker)
        return Z(i);
      if (!e.range)
        return ee(i);
      lt(B.hours) && lt(B.minutes) && !e.multiDates && (Ge(i, k), Ie());
    }
  }, ne = (i) => {
    const k = i[0];
    return e.weekNumbers === "local" ? la(k.value, { weekStartsOn: +e.weekStart }) : e.weekNumbers === "iso" ? oa(k.value) : typeof e.weekNumbers == "function" ? e.weekNumbers(k.value) : "";
  }, ye = (i) => {
    for (let k = i - 1; k >= 0; k--) {
      const x = bt(Re(w(), { month: J.value(k + 1), year: O.value(k + 1) }), 1);
      S(k, pe(x), ke(x));
    }
    for (let k = i + 1; k <= $.value.multiCalendars - 1; k++) {
      const x = st(Re(w(), { month: J.value(k - 1), year: O.value(k - 1) }), 1);
      S(k, pe(x), ke(x));
    }
  }, ve = (i) => b(w(), J.value(i), O.value(i)), at = (i) => Fe(i, B.hours, B.minutes, q()), rt = (i, k) => {
    const x = e.monthPicker ? J.value(i) !== k.month || !k.fromNav : O.value(i) !== k.year;
    if (S(i, k.month, k.year), $.value.multiCalendars && !e.multiCalendarsSolo && ye(i), e.monthPicker || e.yearPicker)
      if (e.range) {
        if (x) {
          let Q = f.value ? f.value.slice() : [];
          Q.length === 2 && Q[1] !== null && (Q = []), Q.length ? Oe(ve(i), Q[0]) ? Q.unshift(ve(i)) : Q[1] = ve(i) : Q = [ve(i)], f.value = Q;
        }
      } else
        f.value = ve(i);
    n("update-month-year", { instance: i, month: k.month, year: k.year }), t(e.multiCalendarsSolo ? i : void 0);
  }, Ht = async (i = !1) => {
    if (e.autoApply && (e.monthPicker || e.yearPicker)) {
      await ct();
      const k = e.monthPicker ? i : !1;
      e.range ? n("auto-apply", k || !f.value || f.value.length === 1) : n("auto-apply", k);
    }
    r();
  }, Mt = (i, k) => {
    const x = Re(w(), { month: J.value(k), year: O.value(k) }), Q = i < 0 ? st(x, 1) : bt(x, 1);
    L(pe(Q), ke(Q), i < 0, e.preventMinMaxNavigation) && (S(k, pe(Q), ke(Q)), $.value.multiCalendars && !e.multiCalendarsSolo && ye(k), n("update-month-year", { instance: k, month: pe(Q), year: ke(Q) }), t());
  }, pt = (i) => {
    Rn(i) && Rn(f.value) && lt(B.hours) && lt(B.minutes) ? (i[0] && f.value[0] && (f.value[0] = Fe(i[0], B.hours[0], B.minutes[0], q())), i[1] && f.value[1] && (f.value[1] = Fe(i[1], B.hours[1], B.minutes[1], q(!1)))) : e.multiDates && Array.isArray(f.value) ? f.value[f.value.length - 1] = at(i) : !e.range && !On(i) && (f.value = at(i)), n("time-update");
  }, Wt = (i, k = !0, x = !1) => {
    const Q = k ? i : B.hours, De = !k && !x ? i : B.minutes, g = x ? i : B.seconds;
    if (e.range && On(f.value) && lt(Q) && lt(De) && lt(g) && !e.disableTimeRangeValidation) {
      const z = ($e) => Fe(f.value[$e], Q[$e], De[$e], g[$e]), Ae = ($e) => cn(f.value[$e], 0);
      if (be(f.value[0], f.value[1]) && (dn(z(0), Ae(1)) || un(z(1), Ae(0))))
        return;
    }
    if (G("hours", Q), G("minutes", De), G("seconds", g), f.value)
      if (e.multiDates) {
        const z = R();
        z && pt(z);
      } else
        pt(f.value);
    else
      e.timePicker && pt(e.range ? [w(), w()] : w());
    r();
  }, zt = (i, k) => {
    e.monthChangeOnScroll && Mt(e.monthChangeOnScroll !== "inverse" ? -i.deltaY : i.deltaY, k);
  }, Kt = (i, k, x = !1) => {
    e.monthChangeOnArrows && e.vertical === x && Tt(i, k);
  }, Tt = (i, k) => {
    Mt(i === "right" ? -1 : 1, k);
  };
  return {
    time: B,
    month: J,
    year: O,
    modelValue: f,
    calendars: H,
    monthYearSelect: Ht,
    isDisabled: p,
    updateTime: Wt,
    getWeekNum: ne,
    selectDate: ht,
    updateMonthYear: rt,
    handleScroll: zt,
    getMarker: (i) => e.markers.find((k) => be(C(i.value), C(k.date))),
    handleArrow: Kt,
    handleSwipe: Tt,
    selectCurrentDate: () => {
      e.range ? f.value && Array.isArray(f.value) && f.value[0] ? f.value = Oe(w(), f.value[0]) ? [w(), f.value[0]] : [f.value[0], w()] : f.value = [w()] : f.value = w(), v();
    },
    presetDateRange: (i, k) => {
      k || i.length && i.length <= 2 && e.range && (f.value = i.map((x) => w(x)), v(), e.multiCalendars && ct().then(() => le(!0)));
    }
  };
}, Qa = (e, n, r) => {
  const t = U(), {
    getZonedToUtc: s,
    getZonedDate: d,
    formatDate: p,
    getDefaultPattern: C,
    checkRangeEnabled: I,
    checkPartialRangeValue: b,
    isValidDate: L,
    setDateMonthOrYear: $,
    defaults: f
  } = Le(n), M = U(""), H = It(n, "format");
  dt(t, () => {
    e("internal-model-change", t.value);
  }), dt(H, () => {
    a();
  });
  const B = (o) => {
    const Z = o || w();
    return n.modelType ? y(Z) : {
      hours: Ze(Z),
      minutes: Xe(Z),
      seconds: n.enableSeconds ? yt(Z) : 0
    };
  }, J = (o) => n.modelType ? y(o) : { month: pe(o), year: ke(o) }, O = (o) => Array.isArray(o) ? I(() => [
    ut(w(), o[0]),
    o[1] ? ut(w(), o[1]) : b()
  ]) : ut(w(), +o), E = (o, Z) => (typeof o == "string" || typeof o == "number") && n.modelType ? m(o) : Z, S = (o) => Array.isArray(o) ? [
    E(
      o[0],
      Fe(null, +o[0].hours, +o[0].minutes, o[0].seconds)
    ),
    E(
      o[1],
      Fe(null, +o[1].hours, +o[1].minutes, o[1].seconds)
    )
  ] : E(o, Fe(null, o.hours, o.minutes, o.seconds)), G = (o) => Array.isArray(o) ? I(() => [
    E(o[0], $(null, +o[0].month, +o[0].year)),
    E(
      o[1],
      o[1] ? $(null, +o[1].month, +o[1].year) : b()
    )
  ]) : E(o, $(null, +o.month, +o.year)), le = (o) => {
    if (Array.isArray(o))
      return o.map((Z) => m(Z));
    throw new Error(Lt.dateArr("multi-dates"));
  }, oe = (o) => {
    if (Array.isArray(o))
      return [w(o[0]), w(o[1])];
    throw new Error(Lt.dateArr("week-picker"));
  }, de = (o) => n.modelAuto ? Array.isArray(o) ? [m(o[0]), m(o[1])] : n.autoApply ? [m(o)] : [m(o), null] : Array.isArray(o) ? I(() => [
    m(o[0]),
    o[1] ? m(o[1]) : b()
  ]) : m(o), T = () => {
    Array.isArray(t.value) && n.range && t.value.length === 1 && t.value.push(b());
  }, Y = () => {
    const o = t.value;
    return [
      y(o[0]),
      o[1] ? y(o[1]) : b()
    ];
  }, F = () => t.value[1] ? Y() : y(Se(t.value[0])), c = () => (t.value || []).map((o) => y(o)), _ = () => (T(), n.modelAuto ? F() : n.multiDates ? c() : Array.isArray(t.value) ? I(() => Y()) : y(Se(t.value))), W = (o) => o ? n.timePicker ? S(Se(o)) : n.monthPicker ? G(Se(o)) : n.yearPicker ? O(Se(o)) : n.multiDates ? le(Se(o)) : n.weekPicker ? oe(Se(o)) : de(Se(o)) : null, q = (o) => {
    const Z = W(o);
    L(Se(Z)) ? (t.value = Se(Z), a()) : (t.value = null, M.value = "");
  }, te = () => {
    var Z;
    const o = (ee) => {
      var we;
      return wt(ee, (we = f.value.textInputOptions) == null ? void 0 : we.format);
    };
    return `${o(t.value[0])} ${(Z = f.value.textInputOptions) == null ? void 0 : Z.rangeSeparator} ${t.value[1] ? o(t.value[1]) : ""}`;
  }, R = () => {
    var o;
    return r.value && t.value ? Array.isArray(t.value) ? te() : wt(t.value, (o = f.value.textInputOptions) == null ? void 0 : o.format) : p(t.value);
  }, l = () => {
    var o;
    return t.value ? n.multiDates ? t.value.map((Z) => p(Z)).join("; ") : n.textInput && typeof ((o = f.value.textInputOptions) == null ? void 0 : o.format) == "string" ? R() : p(t.value) : "";
  }, a = () => {
    !n.format || typeof n.format == "string" ? M.value = l() : M.value = n.format(t.value);
  }, m = (o) => {
    if (n.utc) {
      const Z = new Date(o);
      return n.utc === "preserve" ? new Date(Z.getTime() + Z.getTimezoneOffset() * 6e4) : Z;
    }
    return n.modelType ? n.modelType === "date" || n.modelType === "timestamp" ? d(new Date(o)) : n.modelType === "format" && (typeof n.format == "string" || !n.format) ? an(o, C(), new Date()) : d(an(o, n.modelType, new Date())) : d(new Date(o));
  }, y = (o) => o ? n.utc ? va(o, n.utc === "preserve") : n.modelType ? n.modelType === "timestamp" ? +s(o) : n.modelType === "format" && (typeof n.format == "string" || !n.format) ? p(s(o)) : p(s(o), n.modelType) : s(o) : "", A = (o) => {
    e("update:model-value", o);
  }, j = (o) => Array.isArray(t.value) ? [
    o(t.value[0]),
    t.value[1] ? o(t.value[1]) : b()
  ] : o(Se(t.value)), N = (o) => A(Se(j(o)));
  return {
    inputValue: M,
    internalModelValue: t,
    checkBeforeEmit: () => t.value ? n.range ? n.partialRange ? t.value.length >= 1 : t.value.length === 2 : !!t.value : !1,
    parseExternalModelValue: q,
    formatInputValue: a,
    emitModelValue: () => (a(), n.monthPicker ? N(J) : n.timePicker ? N(B) : n.yearPicker ? N(ke) : n.weekPicker ? A(t.value) : A(_()))
  };
}, er = (e, n) => {
  const { validateMonthYearInRange: r, validateMaxDate: t, validateMinDate: s, defaults: d } = Le(e), p = ($, f) => {
    let M = $;
    return d.value.filters.months.includes(pe(M)) ? (M = f ? st($, 1) : bt($, 1), p(M, f)) : M;
  }, C = ($, f) => {
    let M = $;
    return d.value.filters.years.includes(ke(M)) ? (M = f ? ia($, 1) : ua($, 1), C(M, f)) : M;
  }, I = ($) => {
    const f = Re(new Date(), { month: e.month, year: e.year });
    let M = $ ? st(f, 1) : bt(f, 1), H = pe(M), B = ke(M);
    d.value.filters.months.includes(H) && (M = p(M, $), H = pe(M), B = ke(M)), d.value.filters.years.includes(B) && (M = C(M, $), B = ke(M)), r(H, B, $, e.preventMinMaxNavigation) && b(H, B);
  }, b = ($, f) => {
    n("update-month-year", { month: $, year: f });
  }, L = V(() => ($) => {
    if (!e.preventMinMaxNavigation || $ && !e.maxDate || !$ && !e.minDate)
      return !1;
    const f = Re(new Date(), { month: e.month, year: e.year }), M = $ ? st(f, 1) : bt(f, 1), H = [pe(M), ke(M)];
    return $ ? !t(...H) : !s(...H);
  });
  return { handleMonthYearChange: I, isDisabled: L, updateMonthYear: b };
};
var Ot = /* @__PURE__ */ ((e) => (e.center = "center", e.left = "left", e.right = "right", e))(Ot || {});
const tr = (e, n, r, t) => {
  const s = U({
    top: "0",
    left: "0",
    transform: "none"
  }), d = U(!1), p = It(t, "teleportCenter");
  dt(p, () => {
    B();
  });
  const C = (T) => {
    if (t.teleport) {
      const Y = T.getBoundingClientRect();
      return {
        left: Y.left + window.scrollX,
        top: Y.top + window.scrollY
      };
    }
    return { top: 0, left: 0 };
  }, I = (T, Y) => {
    s.value.left = `${T + Y}px`, s.value.transform = "translateX(-100%)";
  }, b = (T) => {
    s.value.left = `${T}px`, s.value.transform = "translateX(0)";
  }, L = (T, Y, F = !1) => {
    t.position === Ot.left && b(T), t.position === Ot.right && I(T, Y), t.position === Ot.center && (s.value.left = `${T + Y / 2}px`, s.value.transform = F ? "translate(-50%, -50%)" : "translateX(-50%)");
  }, $ = (T) => {
    const { width: Y, height: F } = T.getBoundingClientRect(), { top: c, left: _ } = t.altPosition ? t.altPosition(T) : C(T);
    return { top: +c, left: +_, width: Y, height: F };
  }, f = () => {
    const T = Te(n);
    if (T) {
      const { top: Y, left: F, width: c, height: _ } = $(T);
      s.value.top = `${Y + _ / 2}px`, s.value.transform = "translateY(-50%)", L(F, c, !0);
    }
  }, M = () => {
    s.value.left = "50%", s.value.top = "50%", s.value.transform = "translate(-50%, -50%)", s.value.position = "fixed";
  }, H = () => {
    const T = Te(n), { top: Y, left: F, transform: c } = t.altPosition(T);
    s.value = { top: `${Y}px`, left: `${F}px`, transform: c || "" };
  }, B = (T = !0) => {
    if (!t.inline)
      return p.value ? M() : t.altPosition !== null ? H() : (T && r("recalculate-position"), le());
  }, J = ({
    inputEl: T,
    menuEl: Y,
    left: F,
    width: c
  }) => {
    window.screen.width > 768 && L(F, c), S(T, Y);
  }, O = (T, Y) => {
    const { top: F, left: c, height: _, width: W } = $(T);
    s.value.top = `${_ + F + +t.offset}px`, J({ inputEl: T, menuEl: Y, left: c, width: W }), d.value = !1;
  }, E = (T, Y) => {
    const { top: F, left: c, width: _ } = $(T), { height: W } = Y.getBoundingClientRect();
    s.value.top = `${F - W - +t.offset}px`, J({ inputEl: T, menuEl: Y, left: c, width: _ }), d.value = !0;
  }, S = (T, Y) => {
    if (t.autoPosition) {
      const { left: F, width: c } = $(T), { left: _, right: W } = Y.getBoundingClientRect();
      return _ <= 0 || _ <= F ? b(F) : W >= document.documentElement.clientWidth ? I(F, c) : L(F, c);
    }
  }, G = (T, Y) => {
    const { height: F } = Y.getBoundingClientRect(), { top: c, height: _ } = T.getBoundingClientRect(), q = window.innerHeight - c - _, te = c;
    return F <= q ? O(T, Y) : F > q && F <= te ? E(T, Y) : q >= te ? O(T, Y) : E(T, Y);
  }, le = () => {
    const T = Te(n), Y = Te(e);
    if (T && Y)
      return t.autoPosition ? G(T, Y) : O(T, Y);
  }, oe = function(T) {
    if (T) {
      const Y = T.scrollHeight > T.clientHeight, c = window.getComputedStyle(T).overflowY.indexOf("hidden") !== -1;
      return Y && !c;
    }
    return !0;
  }, de = function(T) {
    return !T || T === document.body ? window : oe(T) ? T : de(T.parentNode);
  };
  return { openOnTop: d, menuPosition: s, setMenuPosition: B, setInitialPosition: f, getScrollableParent: de };
}, vt = [
  { name: "clock-icon", use: ["time", "calendar"] },
  { name: "arrow-left", use: ["month-year", "calendar"] },
  { name: "arrow-right", use: ["month-year", "calendar"] },
  { name: "arrow-up", use: ["time", "calendar"] },
  { name: "arrow-down", use: ["time", "calendar"] },
  { name: "calendar-icon", use: ["month-year", "time", "calendar"] },
  { name: "day", use: ["calendar"] },
  { name: "month-overlay-value", use: ["calendar", "month-year"] },
  { name: "year-overlay-value", use: ["calendar", "month-year"] },
  { name: "year-overlay", use: ["month-year"] },
  { name: "month-overlay", use: ["month-year"] },
  { name: "month-overlay-header", use: ["month-year"] },
  { name: "year-overlay-header", use: ["month-year"] },
  { name: "hours-overlay-value", use: ["calendar", "time"] },
  { name: "minutes-overlay-value", use: ["calendar", "time"] },
  { name: "seconds-overlay-value", use: ["calendar", "time"] },
  { name: "hours", use: ["calendar", "time"] },
  { name: "minutes", use: ["calendar", "time"] },
  { name: "month", use: ["calendar", "month-year"] },
  { name: "year", use: ["calendar", "month-year"] },
  { name: "action-select", use: ["action"] },
  { name: "action-preview", use: ["action"] },
  { name: "calendar-header", use: ["calendar"] },
  { name: "marker-tooltip", use: ["calendar"] },
  { name: "now-button", use: [] },
  { name: "time-picker-overlay", use: ["calendar", "time"] },
  { name: "am-pm-button", use: ["calendar", "time"] },
  { name: "left-sidebar", use: ["menu"] },
  { name: "right-sidebar", use: ["menu"] },
  { name: "month-year", use: ["month-year"] },
  { name: "time-picker", use: ["menu"] },
  { name: "action-row", use: ["action"] }
], nr = [{ name: "trigger" }, { name: "input-icon" }, { name: "clear-icon" }, { name: "dp-input" }], ar = {
  all: () => vt,
  monthYear: () => vt.filter((e) => e.use.includes("month-year")),
  input: () => nr,
  timePicker: () => vt.filter((e) => e.use.includes("time")),
  action: () => vt.filter((e) => e.use.includes("action")),
  calendar: () => vt.filter((e) => e.use.includes("calendar")),
  menu: () => vt.filter((e) => e.use.includes("menu"))
}, it = (e, n, r) => {
  const t = [];
  return ar[n]().forEach((s) => {
    e[s.name] && t.push(s.name);
  }), r && r.length && r.forEach((s) => {
    s.slot && t.push(s.slot);
  }), t;
}, Ut = (e) => ({ transitionName: V(() => (r) => e && typeof e != "boolean" ? r ? e.open : e.close : ""), showTransition: !!e }), nt = {
  multiCalendars: { type: [Boolean, Number, String], default: null },
  modelValue: { type: [String, Date, Array, Object, Number], default: null },
  modelType: { type: String, default: null },
  position: { type: String, default: "center" },
  dark: { type: Boolean, default: !1 },
  format: {
    type: [String, Function],
    default: () => null
  },
  closeOnScroll: { type: Boolean, default: !1 },
  autoPosition: { type: Boolean, default: !0 },
  closeOnAutoApply: { type: Boolean, default: !0 },
  altPosition: { type: Function, default: null },
  transitions: { type: [Boolean, Object], default: !0 },
  formatLocale: { type: Object, default: null },
  utc: { type: [Boolean, String], default: !1 },
  ariaLabels: { type: Object, default: () => ({}) },
  offset: { type: [Number, String], default: 10 },
  hideNavigation: { type: Array, default: () => [] },
  timezone: { type: String, default: null },
  vertical: { type: Boolean, default: !1 },
  disableMonthYearSelect: { type: Boolean, default: !1 },
  menuClassName: { type: String, default: null },
  dayClass: { type: Function, default: null },
  yearRange: { type: Array, default: () => [1900, 2100] },
  multiCalendarsSolo: { type: Boolean, default: !1 },
  calendarCellClassName: { type: String, default: null },
  enableTimePicker: { type: Boolean, default: !0 },
  autoApply: { type: Boolean, default: !1 },
  disabledDates: { type: [Array, Function], default: () => [] },
  monthNameFormat: { type: String, default: "short" },
  startDate: { type: [Date, String], default: null },
  startTime: { type: [Object, Array], default: null },
  hideOffsetDates: { type: Boolean, default: !1 },
  autoRange: { type: [Number, String], default: null },
  noToday: { type: Boolean, default: !1 },
  disabledWeekDays: { type: Array, default: () => [] },
  allowedDates: { type: Array, default: () => [] },
  showNowButton: { type: Boolean, default: !1 },
  nowButtonLabel: { type: String, default: "Now" },
  markers: { type: Array, default: () => [] },
  modeHeight: { type: [Number, String], default: 255 },
  escClose: { type: Boolean, default: !0 },
  spaceConfirm: { type: Boolean, default: !0 },
  monthChangeOnArrows: { type: Boolean, default: !0 },
  presetRanges: { type: Array, default: () => [] },
  flow: { type: Array, default: () => [] },
  partialFlow: { type: Boolean, default: !1 },
  preventMinMaxNavigation: { type: Boolean, default: !1 },
  minRange: { type: [Number, String], default: null },
  maxRange: { type: [Number, String], default: null },
  multiDatesLimit: { type: [Number, String], default: null },
  reverseYears: { type: Boolean, default: !1 },
  keepActionRow: { type: Boolean, default: !1 },
  weekPicker: { type: Boolean, default: !1 },
  filters: { type: Object, default: () => ({}) },
  arrowNavigation: { type: Boolean, default: !1 },
  multiStatic: { type: Boolean, default: !0 },
  disableTimeRangeValidation: { type: Boolean, default: !1 },
  highlight: {
    type: [Array, Function],
    default: null
  },
  highlightWeekDays: {
    type: Array,
    default: null
  },
  highlightDisabledDays: { type: Boolean, default: !1 },
  teleport: { type: [String, Boolean], default: null },
  teleportCenter: { type: Boolean, default: !1 },
  locale: { type: String, default: "en-Us" },
  weekNumName: { type: String, default: "W" },
  weekStart: { type: [Number, String], default: 1 },
  weekNumbers: {
    type: [String, Function],
    default: null
  },
  calendarClassName: { type: String, default: null },
  noSwipe: { type: Boolean, default: !1 },
  monthChangeOnScroll: { type: [Boolean, String], default: !0 },
  dayNames: {
    type: [Function, Array],
    default: null
  },
  monthPicker: { type: Boolean, default: !1 },
  customProps: { type: Object, default: null },
  yearPicker: { type: Boolean, default: !1 },
  modelAuto: { type: Boolean, default: !1 },
  selectText: { type: String, default: "Select" },
  cancelText: { type: String, default: "Cancel" },
  previewFormat: {
    type: [String, Function],
    default: () => ""
  },
  multiDates: { type: Boolean, default: !1 },
  partialRange: { type: Boolean, default: !0 },
  ignoreTimeValidation: { type: Boolean, default: !1 },
  minDate: { type: [Date, String], default: null },
  maxDate: { type: [Date, String], default: null },
  minTime: { type: Object, default: null },
  maxTime: { type: Object, default: null },
  name: { type: String, default: null },
  placeholder: { type: String, default: "" },
  hideInputIcon: { type: Boolean, default: !1 },
  clearable: { type: Boolean, default: !0 },
  state: { type: Boolean, default: null },
  required: { type: Boolean, default: !1 },
  autocomplete: { type: String, default: "off" },
  inputClassName: { type: String, default: null },
  inlineWithInput: { type: Boolean, default: !1 },
  textInputOptions: { type: Object, default: () => null },
  fixedStart: { type: Boolean, default: !1 },
  fixedEnd: { type: Boolean, default: !1 },
  timePicker: { type: Boolean, default: !1 },
  enableSeconds: { type: Boolean, default: !1 },
  is24: { type: Boolean, default: !0 },
  noHoursOverlay: { type: Boolean, default: !1 },
  noMinutesOverlay: { type: Boolean, default: !1 },
  noSecondsOverlay: { type: Boolean, default: !1 },
  hoursGridIncrement: { type: [String, Number], default: 1 },
  minutesGridIncrement: { type: [String, Number], default: 5 },
  secondsGridIncrement: { type: [String, Number], default: 5 },
  hoursIncrement: { type: [Number, String], default: 1 },
  minutesIncrement: { type: [Number, String], default: 1 },
  secondsIncrement: { type: [Number, String], default: 1 },
  range: { type: Boolean, default: !1 },
  uid: { type: String, default: null },
  disabled: { type: Boolean, default: !1 },
  readonly: { type: Boolean, default: !1 },
  inline: { type: Boolean, default: !1 },
  textInput: { type: Boolean, default: !1 },
  onClickOutside: { type: Function, default: null },
  noDisabledRange: { type: Boolean, default: !1 },
  sixWeeks: { type: Boolean, default: !1 }
}, rr = ["aria-label", "aria-disabled", "aria-readonly"], lr = {
  key: 1,
  class: "dp__input_wrap"
}, or = ["id", "name", "inputmode", "placeholder", "disabled", "readonly", "required", "value", "autocomplete", "onKeydown"], sr = {
  key: 2,
  class: "dp__input_icon"
}, ir = {
  key: 4,
  class: "dp__clear_icon"
}, ur = /* @__PURE__ */ We({
  __name: "DatepickerInput",
  props: {
    isMenuOpen: { type: Boolean, default: !1 },
    inputValue: { type: String, default: "" },
    ...nt
  },
  emits: [
    "clear",
    "open",
    "update:input-value",
    "set-input-date",
    "close",
    "select-date",
    "set-empty-date",
    "toggle",
    "focus-prev",
    "focus",
    "blur"
  ],
  setup(e, { expose: n, emit: r }) {
    const t = e, { getDefaultPattern: s, isValidDate: d, defaults: p, getDefaultStartTime: C, assignDefaultTime: I } = Le(t), b = U(), L = U(null), $ = U(!1), f = V(
      () => ({
        dp__pointer: !t.disabled && !t.readonly && !t.textInput,
        dp__disabled: t.disabled,
        dp__input_readonly: !t.textInput,
        dp__input: !0,
        dp__input_icon_pad: !t.hideInputIcon,
        dp__input_valid: t.state,
        dp__input_invalid: t.state === !1,
        dp__input_focus: $.value || t.isMenuOpen,
        dp__input_reg: !t.textInput,
        [t.inputClassName]: !!t.inputClassName
      })
    ), M = () => {
      r("set-input-date", null), t.autoApply && (r("set-empty-date"), b.value = null);
    }, H = (c) => {
      var W;
      const _ = C();
      return fa(
        c,
        ((W = p.value.textInputOptions) == null ? void 0 : W.format) || s(),
        _ || I({})
      );
    }, B = (c) => {
      const { rangeSeparator: _ } = p.value.textInputOptions, [W, q] = c.split(`${_}`);
      if (W) {
        const te = H(W.trim()), R = q ? H(q.trim()) : null, l = te && R ? [te, R] : [te];
        b.value = te ? l : null;
      }
    }, J = (c) => {
      if (t.range)
        B(c);
      else if (t.multiDates) {
        const _ = c.split(";");
        b.value = _.map((W) => H(W.trim())).filter((W) => W);
      } else
        b.value = H(c);
    }, O = (c) => {
      var W;
      const { value: _ } = c.target;
      _ !== "" ? ((W = p.value.textInputOptions) != null && W.openMenu && !t.isMenuOpen && r("open"), J(_), r("set-input-date", b.value)) : M(), r("update:input-value", _);
    }, E = () => {
      var c, _;
      (c = p.value.textInputOptions) != null && c.enterSubmit && d(b.value) && t.inputValue !== "" ? (r("set-input-date", b.value, !0), b.value = null) : (_ = p.value.textInputOptions) != null && _.enterSubmit && t.inputValue === "" && (b.value = null, r("clear"));
    }, S = () => {
      var c, _;
      (c = p.value.textInputOptions) != null && c.tabSubmit && d(b.value) && t.inputValue !== "" ? (r("set-input-date", b.value, !0), b.value = null) : (_ = p.value.textInputOptions) != null && _.tabSubmit && t.inputValue === "" && (b.value = null, r("clear"));
    }, G = () => {
      $.value = !0, r("focus");
    }, le = (c) => {
      var _;
      c.preventDefault(), c.stopImmediatePropagation(), c.stopPropagation(), t.textInput && ((_ = p.value.textInputOptions) != null && _.openMenu) && !t.inlineWithInput ? t.isMenuOpen ? p.value.textInputOptions.enterSubmit && r("select-date") : r("open") : t.textInput || r("toggle");
    }, oe = () => {
      $.value = !1, t.isMenuOpen || r("blur"), t.autoApply && t.textInput && b.value && (r("set-input-date", b.value), r("select-date"), b.value = null);
    }, de = () => {
      r("clear");
    }, T = (c) => {
      t.textInput || c.preventDefault();
    };
    return n({
      focusInput: () => {
        L.value && L.value.focus({ preventScroll: !0 });
      },
      setParsedDate: (c) => {
        b.value = c;
      }
    }), (c, _) => {
      var W;
      return h(), P("div", {
        onClick: le,
        "aria-label": (W = u(p).ariaLabels) == null ? void 0 : W.input,
        role: "textbox",
        "aria-multiline": "false",
        "aria-disabled": c.disabled,
        "aria-readonly": c.readonly
      }, [
        c.$slots.trigger && !c.$slots["dp-input"] && !c.inline ? K(c.$slots, "trigger", { key: 0 }) : D("", !0),
        !c.$slots.trigger && (!c.inline || c.inlineWithInput) ? (h(), P("div", lr, [
          c.$slots["dp-input"] && !c.$slots.trigger && !c.inline ? K(c.$slots, "dp-input", {
            key: 0,
            value: e.inputValue,
            onInput: O,
            onEnter: E,
            onTab: S,
            onClear: de
          }) : D("", !0),
          c.$slots["dp-input"] ? D("", !0) : (h(), P("input", {
            key: 1,
            ref_key: "inputRef",
            ref: L,
            id: c.uid ? `dp-input-${c.uid}` : void 0,
            name: c.name,
            class: ge(u(f)),
            inputmode: c.textInput ? "text" : "none",
            placeholder: c.placeholder,
            disabled: c.disabled,
            readonly: c.readonly,
            required: c.required,
            value: e.inputValue,
            autocomplete: c.autocomplete,
            onInput: O,
            onKeydown: [
              ue(le, ["enter"]),
              ue(S, ["tab"]),
              T
            ],
            onBlur: oe,
            onFocus: G,
            onKeypress: T
          }, null, 42, or)),
          c.$slots["input-icon"] && !c.hideInputIcon ? (h(), P("span", sr, [
            K(c.$slots, "input-icon")
          ])) : D("", !0),
          !c.$slots["input-icon"] && !c.hideInputIcon && !c.$slots["dp-input"] ? (h(), me(u(Ft), {
            key: 3,
            class: "dp__input_icon dp__input_icons"
          })) : D("", !0),
          c.$slots["clear-icon"] && e.inputValue && c.clearable && !c.disabled && !c.readonly ? (h(), P("span", ir, [
            K(c.$slots, "clear-icon", { clear: de })
          ])) : D("", !0),
          c.clearable && !c.$slots["clear-icon"] && e.inputValue && !c.disabled && !c.readonly ? (h(), me(u(ca), {
            key: 5,
            class: "dp__clear_icon dp__input_icons",
            "data-test": "clear-icon",
            onClick: qe(de, ["stop", "prevent"])
          }, null, 8, ["onClick"])) : D("", !0)
        ])) : D("", !0)
      ], 8, rr);
    };
  }
}), dr = { class: "dp__selection_preview" }, cr = { class: "dp__action_buttons" }, fr = ["onKeydown"], vr = /* @__PURE__ */ We({
  __name: "ActionRow",
  props: {
    calendarWidth: { type: Number, default: 0 },
    menuMount: { type: Boolean, default: !1 },
    internalModelValue: { type: [Date, Array], default: null },
    ...nt
  },
  emits: ["close-picker", "select-date", "invalid-select"],
  setup(e, { emit: n }) {
    const r = e, { formatDate: t, isValidTime: s, defaults: d } = Le(r), { buildMatrix: p } = tt(), C = U(null), I = U(null);
    He(() => {
      r.arrowNavigation && p([Te(C), Te(I)], "actionRow");
    });
    const b = V(() => r.range && !r.partialRange && r.internalModelValue ? r.internalModelValue.length === 2 : !0), L = V(() => !f.value || !M.value || !b.value), $ = V(() => ({
      dp__action: !0,
      dp__select: !0,
      dp__action_disabled: L.value
    })), f = V(() => !r.enableTimePicker || r.ignoreTimeValidation ? !0 : s(r.internalModelValue)), M = V(() => r.monthPicker ? O(r.internalModelValue) : !0), H = () => {
      const S = d.value.previewFormat;
      return r.timePicker || r.monthPicker, S(Se(r.internalModelValue));
    }, B = () => {
      const S = r.internalModelValue;
      return d.value.multiCalendars > 0 ? `${t(S[0])} - ${t(S[1])}` : [t(S[0]), t(S[1])];
    }, J = V(() => !r.internalModelValue || !r.menuMount ? "" : typeof d.value.previewFormat == "string" ? Array.isArray(r.internalModelValue) ? r.internalModelValue.length === 2 && r.internalModelValue[1] ? B() : r.multiDates ? r.internalModelValue.map((S) => `${t(S)}`) : r.modelAuto ? `${t(r.internalModelValue[0])}` : `${t(r.internalModelValue[0])} -` : t(r.internalModelValue) : H()), O = (S) => {
      if (!r.monthPicker)
        return !0;
      let G = !0;
      return r.minDate && r.maxDate ? Ve(w(S), w(r.minDate)) && Oe(w(S), w(r.maxDate)) : (r.minDate && (G = Ve(w(S), w(r.minDate))), r.maxDate && (G = Oe(w(S), w(r.maxDate))), G);
    }, E = () => {
      f.value && M.value && b.value ? n("select-date") : n("invalid-select");
    };
    return (S, G) => (h(), P("div", {
      class: "dp__action_row",
      style: Qe(e.calendarWidth ? { width: `${e.calendarWidth}px` } : {})
    }, [
      S.$slots["action-row"] ? K(S.$slots, "action-row", Ne(Pe({ key: 0 }, {
        internalModelValue: e.internalModelValue,
        disabled: u(L),
        selectDate: () => S.$emit("select-date"),
        closePicker: () => S.$emit("close-picker")
      }))) : (h(), P(fe, { key: 1 }, [
        ae("div", dr, [
          S.$slots["action-preview"] ? K(S.$slots, "action-preview", {
            key: 0,
            value: e.internalModelValue
          }) : D("", !0),
          S.$slots["action-preview"] ? D("", !0) : (h(), P(fe, { key: 1 }, [
            Array.isArray(u(J)) ? D("", !0) : (h(), P(fe, { key: 0 }, [
              je(_e(u(J)), 1)
            ], 64)),
            Array.isArray(u(J)) ? (h(!0), P(fe, { key: 1 }, Me(u(J), (le, oe) => (h(), P("div", { key: oe }, _e(le), 1))), 128)) : D("", !0)
          ], 64))
        ]),
        ae("div", cr, [
          S.$slots["action-select"] ? K(S.$slots, "action-select", {
            key: 0,
            value: e.internalModelValue
          }) : D("", !0),
          S.$slots["action-select"] ? D("", !0) : (h(), P(fe, { key: 1 }, [
            S.inline ? D("", !0) : (h(), P("span", {
              key: 0,
              class: "dp__action dp__cancel",
              ref_key: "cancelButtonRef",
              ref: C,
              tabindex: "0",
              onClick: G[0] || (G[0] = (le) => S.$emit("close-picker")),
              onKeydown: [
                G[1] || (G[1] = ue((le) => S.$emit("close-picker"), ["enter"])),
                G[2] || (G[2] = ue((le) => S.$emit("close-picker"), ["space"]))
              ]
            }, _e(S.cancelText), 545)),
            ae("span", {
              class: ge(u($)),
              tabindex: "0",
              onKeydown: [
                ue(E, ["enter"]),
                ue(E, ["space"])
              ],
              onClick: E,
              "data-test": "select-button",
              ref_key: "selectButtonRef",
              ref: I
            }, _e(S.selectText), 43, fr)
          ], 64))
        ])
      ], 64))
    ], 4));
  }
}), mr = ["aria-label"], yr = {
  class: "dp__calendar_header",
  role: "row"
}, gr = {
  key: 0,
  class: "dp__calendar_header_item",
  role: "gridcell"
}, hr = /* @__PURE__ */ ae("div", { class: "dp__calendar_header_separator" }, null, -1), pr = ["aria-label"], kr = {
  key: 0,
  role: "gridcell",
  class: "dp__calendar_item dp__week_num"
}, wr = { class: "dp__cell_inner" }, br = ["aria-selected", "aria-disabled", "aria-label", "data-test", "onClick", "onKeydown", "onMouseenter", "onMouseleave"], Dr = /* @__PURE__ */ We({
  __name: "Calendar",
  props: {
    mappedDates: { type: Array, default: () => [] },
    getWeekNum: {
      type: Function,
      default: () => ""
    },
    specificMode: { type: Boolean, default: !1 },
    instance: { type: Number, default: 0 },
    month: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    ...nt
  },
  emits: [
    "select-date",
    "set-hover-date",
    "handle-scroll",
    "mount",
    "handle-swipe",
    "handle-space",
    "tooltip-open",
    "tooltip-close"
  ],
  setup(e, { expose: n, emit: r }) {
    const t = e, { buildMultiLevelMatrix: s } = tt(), { setDateMonthOrYear: d, defaults: p } = Le(t), C = U(null), I = U({
      bottom: "",
      left: "",
      transform: ""
    }), b = U([]), L = U(null), $ = U(!0), f = U(""), M = U({ startX: 0, endX: 0, startY: 0, endY: 0 }), H = U([]), B = U({ left: "50%" }), J = V(() => t.dayNames ? Array.isArray(t.dayNames) ? t.dayNames : t.dayNames(t.locale, +t.weekStart) : Ua(t.locale, +t.weekStart));
    He(() => {
      r("mount", { cmp: "calendar", refs: b }), t.noSwipe || L.value && (L.value.addEventListener("touchstart", c, { passive: !1 }), L.value.addEventListener("touchend", _, { passive: !1 }), L.value.addEventListener("touchmove", W, { passive: !1 })), t.monthChangeOnScroll && L.value && L.value.addEventListener("wheel", R, { passive: !1 });
    });
    const O = (l) => l ? t.vertical ? "vNext" : "next" : t.vertical ? "vPrevious" : "previous", E = (l, a) => {
      if (t.transitions) {
        const m = xe(d(w(), t.month, t.year));
        f.value = Ve(xe(d(w(), l, a)), m) ? p.value.transitions[O(!0)] : p.value.transitions[O(!1)], $.value = !1, ct(() => {
          $.value = !0;
        });
      }
    }, S = V(
      () => ({
        dp__calendar_wrap: !0,
        [t.calendarClassName]: !!t.calendarClassName
      })
    ), G = V(() => (l) => {
      const a = Ka(l);
      return {
        dp__marker_dot: a.type === "dot",
        dp__marker_line: a.type === "line"
      };
    }), le = V(() => (l) => be(l, C.value)), oe = V(() => ({
      dp__calendar: !0,
      dp__calendar_next: p.value.multiCalendars > 0 && t.instance !== 0
    })), de = V(() => (l) => t.hideOffsetDates ? l.current : !0), T = V(() => t.specificMode ? { height: `${t.modeHeight}px` } : void 0), Y = async (l, a, m) => {
      var y, A;
      if (r("set-hover-date", l), (A = (y = l.marker) == null ? void 0 : y.tooltip) != null && A.length) {
        const j = Te(b.value[a][m]);
        if (j) {
          const { width: N, height: ce } = j.getBoundingClientRect();
          C.value = l.value;
          let v = { left: `${N / 2}px` }, o = -50;
          if (await ct(), H.value[0]) {
            const { left: Z, width: ee } = H.value[0].getBoundingClientRect();
            Z < 0 && (v = { left: "0" }, o = 0, B.value.left = `${N / 2}px`), window.innerWidth < Z + ee && (v = { right: "0" }, o = 0, B.value.left = `${ee - N / 2}px`);
          }
          I.value = {
            bottom: `${ce}px`,
            ...v,
            transform: `translateX(${o}%)`
          }, r("tooltip-open", l.marker);
        }
      }
    }, F = (l) => {
      C.value && (C.value = null, I.value = JSON.parse(JSON.stringify({ bottom: "", left: "", transform: "" })), r("tooltip-close", l.marker));
    }, c = (l) => {
      M.value.startX = l.changedTouches[0].screenX, M.value.startY = l.changedTouches[0].screenY;
    }, _ = (l) => {
      M.value.endX = l.changedTouches[0].screenX, M.value.endY = l.changedTouches[0].screenY, q();
    }, W = (l) => {
      t.vertical && !t.inline && l.preventDefault();
    }, q = () => {
      const l = t.vertical ? "Y" : "X";
      Math.abs(M.value[`start${l}`] - M.value[`end${l}`]) > 10 && r("handle-swipe", M.value[`start${l}`] > M.value[`end${l}`] ? "right" : "left");
    }, te = (l, a, m) => {
      l && (Array.isArray(b.value[a]) ? b.value[a][m] = l : b.value[a] = [l]), t.arrowNavigation && s(b.value, "calendar");
    }, R = (l) => {
      t.monthChangeOnScroll && (l.preventDefault(), r("handle-scroll", l));
    };
    return n({ triggerTransition: E }), (l, a) => {
      var m;
      return h(), P("div", {
        class: ge(u(oe))
      }, [
        ae("div", {
          style: Qe(u(T))
        }, [
          e.specificMode ? D("", !0) : (h(), P("div", {
            key: 0,
            ref_key: "calendarWrapRef",
            ref: L,
            class: ge(u(S)),
            role: "grid",
            "aria-label": (m = u(p).ariaLabels) == null ? void 0 : m.calendarWrap
          }, [
            ae("div", yr, [
              l.weekNumbers ? (h(), P("div", gr, _e(l.weekNumName), 1)) : D("", !0),
              (h(!0), P(fe, null, Me(u(J), (y, A) => (h(), P("div", {
                class: "dp__calendar_header_item",
                role: "gridcell",
                key: A,
                "data-test": "calendar-header"
              }, [
                l.$slots["calendar-header"] ? K(l.$slots, "calendar-header", {
                  key: 0,
                  day: y,
                  index: A
                }) : D("", !0),
                l.$slots["calendar-header"] ? D("", !0) : (h(), P(fe, { key: 1 }, [
                  je(_e(y), 1)
                ], 64))
              ]))), 128))
            ]),
            hr,
            et(gt, {
              name: f.value,
              css: !!l.transitions
            }, {
              default: se(() => {
                var y;
                return [
                  $.value ? (h(), P("div", {
                    key: 0,
                    class: "dp__calendar",
                    role: "grid",
                    "aria-label": (y = u(p).ariaLabels) == null ? void 0 : y.calendarDays
                  }, [
                    (h(!0), P(fe, null, Me(e.mappedDates, (A, j) => (h(), P("div", {
                      class: "dp__calendar_row",
                      role: "row",
                      key: j
                    }, [
                      l.weekNumbers ? (h(), P("div", kr, [
                        ae("div", wr, _e(e.getWeekNum(A.days)), 1)
                      ])) : D("", !0),
                      (h(!0), P(fe, null, Me(A.days, (N, ce) => {
                        var v, o, Z;
                        return h(), P("div", {
                          role: "gridcell",
                          class: "dp__calendar_item",
                          ref_for: !0,
                          ref: (ee) => te(ee, j, ce),
                          key: ce + j,
                          "aria-selected": N.classData.dp__active_date || N.classData.dp__range_start || N.classData.dp__range_start,
                          "aria-disabled": N.classData.dp__cell_disabled,
                          "aria-label": (o = (v = u(p).ariaLabels) == null ? void 0 : v.day) == null ? void 0 : o.call(v, N),
                          tabindex: "0",
                          "data-test": N.value,
                          onClick: qe((ee) => l.$emit("select-date", N), ["stop", "prevent"]),
                          onKeydown: [
                            ue((ee) => l.$emit("select-date", N), ["enter"]),
                            ue((ee) => l.$emit("handle-space", N), ["space"])
                          ],
                          onMouseenter: (ee) => Y(N, j, ce),
                          onMouseleave: (ee) => F(N)
                        }, [
                          ae("div", {
                            class: ge(["dp__cell_inner", N.classData])
                          }, [
                            l.$slots.day && u(de)(N) ? K(l.$slots, "day", {
                              key: 0,
                              day: +N.text,
                              date: N.value
                            }) : D("", !0),
                            l.$slots.day ? D("", !0) : (h(), P(fe, { key: 1 }, [
                              je(_e(N.text), 1)
                            ], 64)),
                            N.marker && u(de)(N) ? (h(), P("div", {
                              key: 2,
                              class: ge(u(G)(N.marker)),
                              style: Qe(N.marker.color ? { backgroundColor: N.marker.color } : {})
                            }, null, 6)) : D("", !0),
                            u(le)(N.value) ? (h(), P("div", {
                              key: 3,
                              class: "dp__marker_tooltip",
                              ref_for: !0,
                              ref_key: "activeTooltip",
                              ref: H,
                              style: Qe(I.value)
                            }, [
                              (Z = N.marker) != null && Z.tooltip ? (h(), P("div", {
                                key: 0,
                                class: "dp__tooltip_content",
                                onClick: a[0] || (a[0] = qe(() => {
                                }, ["stop"]))
                              }, [
                                (h(!0), P(fe, null, Me(N.marker.tooltip, (ee, we) => (h(), P("div", {
                                  key: we,
                                  class: "dp__tooltip_text"
                                }, [
                                  l.$slots["marker-tooltip"] ? K(l.$slots, "marker-tooltip", {
                                    key: 0,
                                    tooltip: ee,
                                    day: N.value
                                  }) : D("", !0),
                                  l.$slots["marker-tooltip"] ? D("", !0) : (h(), P(fe, { key: 1 }, [
                                    ae("div", {
                                      class: "dp__tooltip_mark",
                                      style: Qe(ee.color ? { backgroundColor: ee.color } : {})
                                    }, null, 4),
                                    ae("div", null, _e(ee.text), 1)
                                  ], 64))
                                ]))), 128)),
                                ae("div", {
                                  class: "dp__arrow_bottom_tp",
                                  style: Qe(B.value)
                                }, null, 4)
                              ])) : D("", !0)
                            ], 4)) : D("", !0)
                          ], 2)
                        ], 40, br);
                      }), 128))
                    ]))), 128))
                  ], 8, pr)) : D("", !0)
                ];
              }),
              _: 3
            }, 8, ["name", "css"])
          ], 10, mr))
        ], 4)
      ], 2);
    };
  }
}), $r = ["aria-label", "aria-disabled"], tn = /* @__PURE__ */ We({
  __name: "ActionIcon",
  props: {
    ariaLabel: { type: String, default: "" },
    disabled: { type: Boolean, default: !1 }
  },
  emits: ["activate", "set-ref"],
  setup(e, { emit: n }) {
    const r = U(null);
    return He(() => n("set-ref", r)), (t, s) => (h(), P("div", {
      class: "dp__month_year_col_nav",
      onClick: s[0] || (s[0] = (d) => t.$emit("activate")),
      onKeydown: [
        s[1] || (s[1] = ue((d) => t.$emit("activate"), ["enter"])),
        s[2] || (s[2] = ue((d) => t.$emit("activate"), ["space"]))
      ],
      tabindex: "0",
      role: "button",
      "aria-label": e.ariaLabel,
      "aria-disabled": e.disabled,
      ref_key: "elRef",
      ref: r
    }, [
      ae("div", {
        class: ge(["dp__inner_nav", { dp__inner_nav_disabled: e.disabled }])
      }, [
        K(t.$slots, "default")
      ], 2)
    ], 40, $r));
  }
}), Mr = ["onKeydown"], Tr = { class: "dp__selection_grid_header" }, Ar = ["aria-selected", "aria-disabled", "data-test", "onClick", "onKeydown", "onMouseover"], Sr = ["aria-label", "onKeydown"], Dt = /* @__PURE__ */ We({
  __name: "SelectionGrid",
  props: {
    items: { type: Array, default: () => [] },
    modelValue: { type: [String, Number], default: null },
    multiModelValue: { type: Array, default: () => [] },
    disabledValues: { type: Array, default: () => [] },
    minValue: { type: [Number, String], default: null },
    maxValue: { type: [Number, String], default: null },
    year: { type: Number, default: 0 },
    skipActive: { type: Boolean, default: !1 },
    headerRefs: { type: Array, default: () => [] },
    skipButtonRef: { type: Boolean, default: !1 },
    monthPicker: { type: Boolean, default: !1 },
    yearPicker: { type: Boolean, default: !1 },
    escClose: { type: Boolean, default: !0 },
    type: { type: String, default: null },
    arrowNavigation: { type: Boolean, default: !1 },
    autoApply: { type: Boolean, default: !1 },
    textInput: { type: Boolean, default: !1 },
    ariaLabels: { type: Object, default: () => ({}) },
    hideNavigation: { type: Array, default: () => [] }
  },
  emits: ["update:model-value", "selected", "toggle", "reset-flow"],
  setup(e, { expose: n, emit: r }) {
    const t = e, { setSelectionGrid: s, buildMultiLevelMatrix: d, setMonthPicker: p } = tt(), { hideNavigationButtons: C } = Le(t), I = U(!1), b = U(null), L = U(null), $ = U([]), f = U(), M = U(null), H = U(0), B = U(null);
    qn(() => {
      b.value = null;
    }), He(() => {
      ct().then(() => Y()), O(), J(!0);
    }), on(() => J(!1));
    const J = (R) => {
      var l;
      t.arrowNavigation && ((l = t.headerRefs) != null && l.length ? p(R) : s(R));
    }, O = () => {
      const R = Te(L);
      R && (t.textInput || R.focus({ preventScroll: !0 }), I.value = R.clientHeight < R.scrollHeight);
    }, E = V(
      () => ({
        dp__overlay: !0
      })
    ), S = V(() => ({
      dp__overlay_col: !0
    })), G = (R) => t.skipActive ? !1 : R.value === t.modelValue, le = V(() => t.items.map((R) => R.filter((l) => l).map((l) => {
      var y, A, j;
      const a = t.disabledValues.some((N) => N === l.value) || T(l.value), m = (y = t.multiModelValue) != null && y.length ? (A = t.multiModelValue) == null ? void 0 : A.some(
        (N) => be(
          N,
          ut(
            t.monthPicker ? Rt(new Date(), l.value) : new Date(),
            t.monthPicker ? t.year : l.value
          )
        )
      ) : G(l);
      return {
        ...l,
        className: {
          dp__overlay_cell_active: m,
          dp__overlay_cell: !m,
          dp__overlay_cell_disabled: a,
          dp__overlay_cell_active_disabled: a && m,
          dp__overlay_cell_pad: !0,
          dp__cell_in_between: (j = t.multiModelValue) != null && j.length ? c(l.value) : !1
        }
      };
    }))), oe = V(
      () => ({
        dp__button: !0,
        dp__overlay_action: !0,
        dp__over_action_scroll: I.value,
        dp__button_bottom: t.autoApply
      })
    ), de = V(() => {
      var R, l;
      return {
        dp__overlay_container: !0,
        dp__container_flex: ((R = t.items) == null ? void 0 : R.length) <= 6,
        dp__container_block: ((l = t.items) == null ? void 0 : l.length) > 6
      };
    }), T = (R) => {
      const l = t.maxValue || t.maxValue === 0, a = t.minValue || t.minValue === 0;
      return !l && !a ? !1 : l && a ? +R > +t.maxValue || +R < +t.minValue : l ? +R > +t.maxValue : a ? +R < +t.minValue : !1;
    }, Y = () => {
      const R = Te(b), l = Te(L), a = Te(M), m = Te(B), y = a ? a.getBoundingClientRect().height : 0;
      l && (H.value = l.getBoundingClientRect().height - y), R && m && (m.scrollTop = R.offsetTop - m.offsetTop - (H.value / 2 - R.getBoundingClientRect().height) - y);
    }, F = (R) => {
      !t.disabledValues.some((l) => l === R) && !T(R) && (r("update:model-value", R), r("selected"));
    }, c = (R) => {
      const l = t.monthPicker ? t.year : R;
      return zn(
        t.multiModelValue,
        ut(
          t.monthPicker ? Rt(new Date(), f.value || 0) : new Date(),
          t.monthPicker ? l : f.value || l
        ),
        ut(t.monthPicker ? Rt(new Date(), R) : new Date(), l)
      );
    }, _ = () => {
      r("toggle"), r("reset-flow");
    }, W = () => {
      t.escClose && _();
    }, q = (R, l, a, m) => {
      R && (l.value === +t.modelValue && !t.disabledValues.includes(l.value) && (b.value = R), t.arrowNavigation && (Array.isArray($.value[a]) ? $.value[a][m] = R : $.value[a] = [R], te()));
    }, te = () => {
      var l, a;
      const R = (l = t.headerRefs) != null && l.length ? [t.headerRefs].concat($.value) : $.value.concat([t.skipButtonRef ? [] : [M.value]]);
      d(Se(R), (a = t.headerRefs) != null && a.length ? "monthPicker" : "selectionGrid");
    };
    return n({ focusGrid: O }), (R, l) => {
      var a;
      return h(), P("div", {
        ref_key: "gridWrapRef",
        ref: L,
        class: ge(u(E)),
        role: "dialog",
        tabindex: "0",
        onKeydown: ue(W, ["esc"])
      }, [
        ae("div", {
          class: ge(u(de)),
          ref_key: "containerRef",
          ref: B,
          role: "grid",
          style: Qe({ height: `${H.value}px` })
        }, [
          ae("div", Tr, [
            K(R.$slots, "header")
          ]),
          R.$slots.overlay ? K(R.$slots, "overlay", { key: 0 }) : (h(!0), P(fe, { key: 1 }, Me(u(le), (m, y) => (h(), P("div", {
            class: "dp__overlay_row",
            key: y,
            role: "row"
          }, [
            (h(!0), P(fe, null, Me(m, (A, j) => (h(), P("div", {
              role: "gridcell",
              class: ge(u(S)),
              key: A.value,
              "aria-selected": A.value === e.modelValue && !e.disabledValues.includes(A.value),
              "aria-disabled": A.className.dp__overlay_cell_disabled,
              ref_for: !0,
              ref: (N) => q(N, A, y, j),
              tabindex: "0",
              "data-test": A.text,
              onClick: (N) => F(A.value),
              onKeydown: [
                ue((N) => F(A.value), ["enter"]),
                ue((N) => F(A.value), ["space"])
              ],
              onMouseover: (N) => f.value = A.value
            }, [
              ae("div", {
                class: ge(A.className)
              }, [
                R.$slots.item ? K(R.$slots, "item", {
                  key: 0,
                  item: A
                }) : D("", !0),
                R.$slots.item ? D("", !0) : (h(), P(fe, { key: 1 }, [
                  je(_e(A.text), 1)
                ], 64))
              ], 2)
            ], 42, Ar))), 128))
          ]))), 128))
        ], 6),
        R.$slots["button-icon"] ? Ct((h(), P("div", {
          key: 0,
          role: "button",
          "aria-label": (a = e.ariaLabels) == null ? void 0 : a.toggleOverlay,
          class: ge(u(oe)),
          tabindex: "0",
          ref_key: "toggleButton",
          ref: M,
          onClick: _,
          onKeydown: ue(_, ["enter"])
        }, [
          K(R.$slots, "button-icon")
        ], 42, Sr)), [
          [_t, !u(C)(e.type)]
        ]) : D("", !0)
      ], 42, Mr);
    };
  }
}), Pr = ["aria-label"], In = /* @__PURE__ */ We({
  __name: "RegularPicker",
  props: {
    ariaLabel: { type: String, default: "" },
    showSelectionGrid: { type: Boolean, default: !1 },
    modelValue: { type: Number, default: null },
    items: { type: Array, default: () => [] },
    disabledValues: { type: Array, default: () => [] },
    minValue: { type: Number, default: null },
    maxValue: { type: Number, default: null },
    slotName: { type: String, default: "" },
    overlaySlot: { type: String, default: "" },
    headerRefs: { type: Array, default: () => [] },
    escClose: { type: Boolean, default: !0 },
    type: { type: String, default: null },
    transitions: { type: [Object, Boolean], default: !1 },
    arrowNavigation: { type: Boolean, default: !1 },
    autoApply: { type: Boolean, default: !1 },
    textInput: { type: Boolean, default: !1 },
    ariaLabels: { type: Object, default: () => ({}) },
    hideNavigation: { type: Array, default: () => [] }
  },
  emits: ["update:model-value", "toggle", "set-ref"],
  setup(e, { emit: n }) {
    const r = e, { transitionName: t, showTransition: s } = Ut(r.transitions), d = U(null);
    return He(() => n("set-ref", d)), (p, C) => (h(), P(fe, null, [
      ae("div", {
        class: "dp__month_year_select",
        onClick: C[0] || (C[0] = (I) => p.$emit("toggle")),
        onKeydown: [
          C[1] || (C[1] = ue((I) => p.$emit("toggle"), ["enter"])),
          C[2] || (C[2] = ue((I) => p.$emit("toggle"), ["space"]))
        ],
        role: "button",
        "aria-label": e.ariaLabel,
        tabindex: "0",
        ref_key: "elRef",
        ref: d
      }, [
        K(p.$slots, "default")
      ], 40, Pr),
      et(gt, {
        name: u(t)(e.showSelectionGrid),
        css: u(s)
      }, {
        default: se(() => [
          e.showSelectionGrid ? (h(), me(Dt, Pe({ key: 0 }, {
            modelValue: e.modelValue,
            items: e.items,
            disabledValues: e.disabledValues,
            minValue: e.minValue,
            maxValue: e.maxValue,
            escClose: e.escClose,
            type: e.type,
            arrowNavigation: e.arrowNavigation,
            textInput: e.textInput,
            autoApply: e.autoApply,
            ariaLabels: e.ariaLabels,
            hideNavigation: e.hideNavigation
          }, {
            "header-refs": [],
            "onUpdate:modelValue": C[3] || (C[3] = (I) => p.$emit("update:model-value", I)),
            onToggle: C[4] || (C[4] = (I) => p.$emit("toggle"))
          }), Ee({
            "button-icon": se(() => [
              p.$slots["calendar-icon"] ? K(p.$slots, "calendar-icon", { key: 0 }) : D("", !0),
              p.$slots["calendar-icon"] ? D("", !0) : (h(), me(u(Ft), { key: 1 }))
            ]),
            _: 2
          }, [
            p.$slots[e.slotName] ? {
              name: "item",
              fn: se(({ item: I }) => [
                K(p.$slots, e.slotName, { item: I })
              ]),
              key: "0"
            } : void 0,
            p.$slots[e.overlaySlot] ? {
              name: "overlay",
              fn: se(() => [
                K(p.$slots, e.overlaySlot)
              ]),
              key: "1"
            } : void 0,
            p.$slots[`${e.overlaySlot}-header`] ? {
              name: "header",
              fn: se(() => [
                K(p.$slots, `${e.overlaySlot}-header`)
              ]),
              key: "2"
            } : void 0
          ]), 1040)) : D("", !0)
        ]),
        _: 3
      }, 8, ["name", "css"])
    ], 64));
  }
}), Cr = { class: "dp__month_year_row" }, _r = { class: "dp__month_year_wrap" }, Nr = { class: "dp__month_picker_header" }, Rr = ["aria-label"], Or = ["aria-label"], Ir = ["aria-label"], Br = /* @__PURE__ */ We({
  __name: "MonthYearPicker",
  props: {
    month: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    instance: { type: Number, default: 0 },
    years: { type: Array, default: () => [] },
    months: { type: Array, default: () => [] },
    internalModelValue: { type: [Date, Array], default: null },
    ...nt
  },
  emits: ["update-month-year", "month-year-select", "mount", "reset-flow", "overlay-closed"],
  setup(e, { expose: n, emit: r }) {
    const t = e, { defaults: s } = Le(t), { transitionName: d, showTransition: p } = Ut(s.value.transitions), { buildMatrix: C } = tt(), { handleMonthYearChange: I, isDisabled: b, updateMonthYear: L } = er(t, r), $ = U(!1), f = U(!1), M = U([null, null, null, null]), H = U(null), B = U(null), J = U(null);
    He(() => {
      r("mount");
    });
    const O = (v) => ({
      get: () => t[v],
      set: (o) => {
        const Z = v === "month" ? "year" : "month";
        r("update-month-year", { [v]: o, [Z]: t[Z] }), r("month-year-select", v === "year"), v === "month" ? y(!0) : A(!0);
      }
    }), E = V(O("month")), S = V(O("year")), G = (v) => {
      const o = ke(w(v));
      return t.year === o;
    }, le = V(() => t.monthPicker ? Array.isArray(t.disabledDates) ? t.disabledDates.map((v) => w(v)).filter((v) => G(v)).map((v) => pe(v)) : [] : []), oe = V(() => (v) => {
      const o = v === "month";
      return {
        showSelectionGrid: (o ? $ : f).value,
        items: (o ? R : l).value,
        disabledValues: s.value.filters[o ? "months" : "years"].concat(le.value),
        minValue: (o ? F : T).value,
        maxValue: (o ? c : Y).value,
        headerRefs: o && t.monthPicker ? [H.value, B.value, J.value] : [],
        escClose: t.escClose,
        transitions: s.value.transitions,
        ariaLabels: s.value.ariaLabels,
        textInput: t.textInput,
        autoApply: t.autoApply,
        arrowNavigation: t.arrowNavigation,
        hideNavigation: t.hideNavigation
      };
    }), de = V(() => (v) => ({
      month: t.month,
      year: t.year,
      items: v === "month" ? t.months : t.years,
      instance: t.instance,
      updateMonthYear: L,
      toggle: v === "month" ? y : A
    })), T = V(() => t.minDate ? ke(w(t.minDate)) : null), Y = V(() => t.maxDate ? ke(w(t.maxDate)) : null), F = V(() => {
      if (t.minDate && T.value) {
        if (T.value > t.year)
          return 12;
        if (T.value === t.year)
          return pe(w(t.minDate));
      }
      return null;
    }), c = V(() => t.maxDate && Y.value ? Y.value < t.year ? -1 : Y.value === t.year ? pe(w(t.maxDate)) : null : null), _ = V(() => t.range && t.internalModelValue && (t.monthPicker || t.yearPicker) ? t.internalModelValue : []), W = (v) => v.reverse(), q = (v, o = !1) => {
      const Z = [], ee = (we) => o ? W(we) : we;
      for (let we = 0; we < v.length; we += 3) {
        const ze = [v[we], v[we + 1], v[we + 2]];
        Z.push(ee(ze));
      }
      return o ? Z.reverse() : Z;
    }, te = V(() => {
      const v = t.months.find((o) => o.value === t.month);
      return v || { text: "", value: 0 };
    }), R = V(() => q(t.months)), l = V(() => q(t.years, t.reverseYears)), a = V(() => s.value.multiCalendars ? t.multiCalendarsSolo ? !0 : t.instance === 0 : !0), m = V(() => s.value.multiCalendars ? t.multiCalendarsSolo ? !0 : t.instance === s.value.multiCalendars - 1 : !0), y = (v = !1) => {
      j(v), $.value = !$.value, $.value || r("overlay-closed");
    }, A = (v = !1) => {
      j(v), f.value = !f.value, f.value || r("overlay-closed");
    }, j = (v) => {
      v || r("reset-flow");
    }, N = (v = !1) => {
      b.value(v) || r("update-month-year", {
        year: v ? t.year + 1 : t.year - 1,
        month: t.month,
        fromNav: !0
      });
    }, ce = (v, o) => {
      t.arrowNavigation && (M.value[o] = Te(v), C(M.value, "monthYear"));
    };
    return n({
      toggleMonthPicker: y,
      toggleYearPicker: A,
      handleMonthYearChange: I
    }), (v, o) => {
      var Z, ee, we, ze, Je;
      return h(), P("div", Cr, [
        v.$slots["month-year"] ? K(v.$slots, "month-year", Ne(Pe({ key: 0 }, { month: e.month, year: e.year, months: e.months, years: e.years, updateMonthYear: u(L), handleMonthYearChange: u(I), instance: e.instance }))) : (h(), P(fe, { key: 1 }, [
          !v.monthPicker && !v.yearPicker ? (h(), P(fe, { key: 0 }, [
            u(a) && !v.vertical ? (h(), me(tn, {
              key: 0,
              "aria-label": (Z = u(s).ariaLabels) == null ? void 0 : Z.prevMonth,
              disabled: u(b)(!1),
              onActivate: o[0] || (o[0] = (re) => u(I)(!1)),
              onSetRef: o[1] || (o[1] = (re) => ce(re, 0))
            }, {
              default: se(() => [
                v.$slots["arrow-left"] ? K(v.$slots, "arrow-left", { key: 0 }) : D("", !0),
                v.$slots["arrow-left"] ? D("", !0) : (h(), me(u(kn), { key: 1 }))
              ]),
              _: 3
            }, 8, ["aria-label", "disabled"])) : D("", !0),
            ae("div", _r, [
              et(In, Pe({
                type: "month",
                "slot-name": "month-overlay-val",
                "overlay-slot": "overlay-month",
                "aria-label": (ee = u(s).ariaLabels) == null ? void 0 : ee.openMonthsOverlay,
                modelValue: u(E),
                "onUpdate:modelValue": o[2] || (o[2] = (re) => ot(E) ? E.value = re : null)
              }, u(oe)("month"), {
                onToggle: y,
                onSetRef: o[3] || (o[3] = (re) => ce(re, 1))
              }), Ee({
                default: se(() => [
                  v.$slots.month ? K(v.$slots, "month", Ne(Pe({ key: 0 }, u(te)))) : D("", !0),
                  v.$slots.month ? D("", !0) : (h(), P(fe, { key: 1 }, [
                    je(_e(u(te).text), 1)
                  ], 64))
                ]),
                _: 2
              }, [
                v.$slots["calendar-icon"] ? {
                  name: "calendar-icon",
                  fn: se(() => [
                    K(v.$slots, "calendar-icon")
                  ]),
                  key: "0"
                } : void 0,
                v.$slots["month-overlay-value"] ? {
                  name: "month-overlay-val",
                  fn: se(({ item: re }) => [
                    K(v.$slots, "month-overlay-value", {
                      text: re.text,
                      value: re.value
                    })
                  ]),
                  key: "1"
                } : void 0,
                v.$slots["month-overlay"] ? {
                  name: "overlay-month",
                  fn: se(() => [
                    K(v.$slots, "month-overlay", Ne(Ue(u(de)("month"))))
                  ]),
                  key: "2"
                } : void 0,
                v.$slots["month-overlay-header"] ? {
                  name: "overlay-month-header",
                  fn: se(() => [
                    K(v.$slots, "month-overlay-header", { toggle: y })
                  ]),
                  key: "3"
                } : void 0
              ]), 1040, ["aria-label", "modelValue"]),
              et(In, Pe({
                type: "year",
                "slot-name": "year-overlay-val",
                "overlay-slot": "overlay-year",
                "aria-label": (we = u(s).ariaLabels) == null ? void 0 : we.openYearsOverlay,
                modelValue: u(S),
                "onUpdate:modelValue": o[4] || (o[4] = (re) => ot(S) ? S.value = re : null)
              }, u(oe)("year"), {
                onToggle: A,
                onSetRef: o[5] || (o[5] = (re) => ce(re, 2))
              }), Ee({
                default: se(() => [
                  v.$slots.year ? K(v.$slots, "year", {
                    key: 0,
                    year: e.year
                  }) : D("", !0),
                  v.$slots.year ? D("", !0) : (h(), P(fe, { key: 1 }, [
                    je(_e(e.year), 1)
                  ], 64))
                ]),
                _: 2
              }, [
                v.$slots["calendar-icon"] ? {
                  name: "calendar-icon",
                  fn: se(() => [
                    K(v.$slots, "calendar-icon")
                  ]),
                  key: "0"
                } : void 0,
                v.$slots["year-overlay-value"] ? {
                  name: "year-overlay-val",
                  fn: se(({ item: re }) => [
                    K(v.$slots, "year-overlay-value", {
                      text: re.text,
                      value: re.value
                    })
                  ]),
                  key: "1"
                } : void 0,
                v.$slots["year-overlay"] ? {
                  name: "overlay-year",
                  fn: se(() => [
                    K(v.$slots, "year-overlay", Ne(Ue(u(de)("year"))))
                  ]),
                  key: "2"
                } : void 0,
                v.$slots["year-overlay-header"] ? {
                  name: "overlay-year-header",
                  fn: se(() => [
                    K(v.$slots, "year-overlay-header", { toggle: A })
                  ]),
                  key: "3"
                } : void 0
              ]), 1040, ["aria-label", "modelValue"])
            ]),
            u(a) && v.vertical ? (h(), me(tn, {
              key: 1,
              "aria-label": (ze = u(s).ariaLabels) == null ? void 0 : ze.prevMonth,
              disabled: u(b)(!1),
              onActivate: o[6] || (o[6] = (re) => u(I)(!1))
            }, {
              default: se(() => [
                v.$slots["arrow-up"] ? K(v.$slots, "arrow-up", { key: 0 }) : D("", !0),
                v.$slots["arrow-up"] ? D("", !0) : (h(), me(u(Hn), { key: 1 }))
              ]),
              _: 3
            }, 8, ["aria-label", "disabled"])) : D("", !0),
            u(m) ? (h(), me(tn, {
              key: 2,
              ref: "rightIcon",
              disabled: u(b)(!0),
              "aria-label": (Je = u(s).ariaLabels) == null ? void 0 : Je.nextMonth,
              onActivate: o[7] || (o[7] = (re) => u(I)(!0)),
              onSetRef: o[8] || (o[8] = (re) => ce(re, 3))
            }, {
              default: se(() => [
                v.$slots[v.vertical ? "arrow-down" : "arrow-right"] ? K(v.$slots, v.vertical ? "arrow-down" : "arrow-right", { key: 0 }) : D("", !0),
                v.$slots[v.vertical ? "arrow-down" : "arrow-right"] ? D("", !0) : (h(), me(Bn(v.vertical ? u(Wn) : u(wn)), { key: 1 }))
              ]),
              _: 3
            }, 8, ["disabled", "aria-label"])) : D("", !0)
          ], 64)) : D("", !0),
          v.monthPicker ? (h(), me(Dt, Pe({ key: 1 }, u(oe)("month"), {
            "skip-active": v.range,
            year: e.year,
            "multi-model-value": u(_),
            "month-picker": "",
            modelValue: u(E),
            "onUpdate:modelValue": o[17] || (o[17] = (re) => ot(E) ? E.value = re : null),
            onToggle: y,
            onSelected: o[18] || (o[18] = (re) => v.$emit("overlay-closed"))
          }), Ee({
            header: se(() => {
              var re, Ge, Ke;
              return [
                ae("div", Nr, [
                  ae("div", {
                    class: "dp__month_year_col_nav",
                    tabindex: "0",
                    ref_key: "mpPrevIconRef",
                    ref: H,
                    onClick: o[9] || (o[9] = (Ie) => N(!1)),
                    onKeydown: o[10] || (o[10] = ue((Ie) => N(!1), ["enter"]))
                  }, [
                    ae("div", {
                      class: ge(["dp__inner_nav", { dp__inner_nav_disabled: u(b)(!1) }]),
                      role: "button",
                      "aria-label": (re = u(s).ariaLabels) == null ? void 0 : re.prevMonth
                    }, [
                      v.$slots["arrow-left"] ? K(v.$slots, "arrow-left", { key: 0 }) : D("", !0),
                      v.$slots["arrow-left"] ? D("", !0) : (h(), me(u(kn), { key: 1 }))
                    ], 10, Rr)
                  ], 544),
                  ae("div", {
                    class: "dp__pointer",
                    role: "button",
                    ref_key: "mpYearButtonRef",
                    ref: B,
                    "aria-label": (Ge = u(s).ariaLabels) == null ? void 0 : Ge.openYearsOverlay,
                    tabindex: "0",
                    onClick: o[11] || (o[11] = () => A(!1)),
                    onKeydown: o[12] || (o[12] = ue(() => A(!1), ["enter"]))
                  }, [
                    v.$slots.year ? K(v.$slots, "year", {
                      key: 0,
                      year: e.year
                    }) : D("", !0),
                    v.$slots.year ? D("", !0) : (h(), P(fe, { key: 1 }, [
                      je(_e(e.year), 1)
                    ], 64))
                  ], 40, Or),
                  ae("div", {
                    class: "dp__month_year_col_nav",
                    tabindex: "0",
                    ref_key: "mpNextIconRef",
                    ref: J,
                    onClick: o[13] || (o[13] = (Ie) => N(!0)),
                    onKeydown: o[14] || (o[14] = ue((Ie) => N(!0), ["enter"]))
                  }, [
                    ae("div", {
                      class: ge(["dp__inner_nav", { dp__inner_nav_disabled: u(b)(!0) }]),
                      role: "button",
                      "aria-label": (Ke = u(s).ariaLabels) == null ? void 0 : Ke.nextMonth
                    }, [
                      v.$slots["arrow-right"] ? K(v.$slots, "arrow-right", { key: 0 }) : D("", !0),
                      v.$slots["arrow-right"] ? D("", !0) : (h(), me(u(wn), { key: 1 }))
                    ], 10, Ir)
                  ], 544)
                ]),
                et(gt, {
                  name: u(d)(f.value),
                  css: u(p)
                }, {
                  default: se(() => [
                    f.value ? (h(), me(Dt, Pe({ key: 0 }, u(oe)("year"), {
                      modelValue: u(S),
                      "onUpdate:modelValue": o[15] || (o[15] = (Ie) => ot(S) ? S.value = Ie : null),
                      onToggle: A,
                      onSelected: o[16] || (o[16] = (Ie) => v.$emit("overlay-closed"))
                    }), Ee({
                      "button-icon": se(() => [
                        v.$slots["calendar-icon"] ? K(v.$slots, "calendar-icon", { key: 0 }) : D("", !0),
                        v.$slots["calendar-icon"] ? D("", !0) : (h(), me(u(Ft), { key: 1 }))
                      ]),
                      _: 2
                    }, [
                      v.$slots["year-overlay-value"] ? {
                        name: "item",
                        fn: se(({ item: Ie }) => [
                          K(v.$slots, "year-overlay-value", {
                            text: Ie.text,
                            value: Ie.value
                          })
                        ]),
                        key: "0"
                      } : void 0
                    ]), 1040, ["modelValue"])) : D("", !0)
                  ]),
                  _: 3
                }, 8, ["name", "css"])
              ];
            }),
            _: 2
          }, [
            v.$slots["month-overlay-value"] ? {
              name: "item",
              fn: se(({ item: re }) => [
                K(v.$slots, "month-overlay-value", {
                  text: re.text,
                  value: re.value
                })
              ]),
              key: "0"
            } : void 0
          ]), 1040, ["skip-active", "year", "multi-model-value", "modelValue"])) : D("", !0),
          v.yearPicker ? (h(), me(Dt, Pe({ key: 2 }, u(oe)("year"), {
            modelValue: u(S),
            "onUpdate:modelValue": o[19] || (o[19] = (re) => ot(S) ? S.value = re : null),
            "multi-model-value": u(_),
            "skip-active": v.range,
            "skip-button-ref": "",
            "year-picker": "",
            onToggle: A,
            onSelected: o[20] || (o[20] = (re) => v.$emit("overlay-closed"))
          }), Ee({ _: 2 }, [
            v.$slots["year-overlay-value"] ? {
              name: "item",
              fn: se(({ item: re }) => [
                K(v.$slots, "year-overlay-value", {
                  text: re.text,
                  value: re.value
                })
              ]),
              key: "0"
            } : void 0
          ]), 1040, ["modelValue", "multi-model-value", "skip-active"])) : D("", !0)
        ], 64))
      ]);
    };
  }
}), Yr = {
  key: 0,
  class: "dp__time_input"
}, Vr = ["aria-label", "onKeydown", "onClick"], Er = ["aria-label", "data-test", "onKeydown", "onClick"], Lr = ["aria-label", "onKeydown", "onClick"], Fr = { key: 0 }, Ur = ["aria-label", "onKeydown"], Hr = /* @__PURE__ */ We({
  __name: "TimeInput",
  props: {
    hours: { type: Number, default: 0 },
    minutes: { type: Number, default: 0 },
    seconds: { type: Number, default: 0 },
    closeTimePickerBtn: { type: Object, default: null },
    order: { type: Number, default: 0 },
    ...nt
  },
  emits: [
    "set-hours",
    "set-minutes",
    "update:hours",
    "update:minutes",
    "update:seconds",
    "reset-flow",
    "mounted",
    "overlay-closed"
  ],
  setup(e, { expose: n, emit: r }) {
    const t = e, { setTimePickerElements: s, setTimePickerBackRef: d } = tt(), { defaults: p } = Le(t), { transitionName: C, showTransition: I } = Ut(p.value.transitions), b = $t({
      hours: !1,
      minutes: !1,
      seconds: !1
    }), L = U("AM"), $ = U(null), f = U([]);
    He(() => {
      r("mounted");
    });
    const M = V(() => (l) => !!(t.maxTime && t.maxTime[l] && t.maxTime[l] < t[l] + +t[`${l}Increment`])), H = V(() => (l) => !!(t.minTime && t.minTime[l] && t.minTime[l] > t[l] - +t[`${l}Increment`])), B = (l, a) => Fn(Re(w(), l), a), J = (l, a) => da(Re(w(), l), a), O = V(
      () => ({
        dp__time_col: !0,
        dp__time_col_reg: !t.enableSeconds && t.is24,
        dp__time_col_reg_with_button: !t.enableSeconds && !t.is24,
        dp__time_col_sec: t.enableSeconds && t.is24,
        dp__time_col_sec_with_button: t.enableSeconds && !t.is24
      })
    ), E = V(() => {
      const l = [{ type: "hours" }, { type: "", separator: !0 }, { type: "minutes" }];
      return t.enableSeconds ? l.concat([{ type: "", separator: !0 }, { type: "seconds" }]) : l;
    }), S = V(() => E.value.filter((l) => !l.separator)), G = V(() => (l) => {
      if (l === "hours") {
        const a = _(t.hours);
        return { text: a < 10 ? `0${a}` : `${a}`, value: a };
      }
      return { text: t[l] < 10 ? `0${t[l]}` : `${t[l]}`, value: t[l] };
    }), le = (l) => {
      const a = t.is24 ? 24 : 12, m = l === "hours" ? a : 60, y = +t[`${l}GridIncrement`], A = l === "hours" && !t.is24 ? y : 0, j = [];
      for (let N = A; N < m; N += y)
        j.push({ value: N, text: N < 10 ? `0${N}` : `${N}` });
      return l === "hours" && !t.is24 && j.push({ value: 0, text: "12" }), Fa(j);
    }, oe = (l, a) => {
      const m = t.minTime && t.minTime[a], y = t.maxTime && t.maxTime[a];
      return m && y ? l < m || l > y : m ? l < m : y ? l > y : !1;
    }, de = V(() => (l) => le(l).flat().filter((m) => m).map((m) => m.value).filter((m) => oe(m, l))), T = (l) => t[`no${l[0].toUpperCase() + l.slice(1)}Overlay`], Y = (l) => {
      T(l) || (b[l] = !b[l], b[l] || r("overlay-closed"));
    }, F = (l) => l === "hours" ? Ze : l === "minutes" ? Xe : yt, c = (l, a = !0) => {
      const m = a ? B : J;
      (a ? M.value(l) : H.value(l)) || r(
        `update:${l}`,
        F(l)(m({ [l]: +t[l] }, { [l]: +t[`${l}Increment`] }))
      );
    }, _ = (l) => t.is24 ? l : (l >= 12 ? L.value = "PM" : L.value = "AM", za(l)), W = () => {
      L.value === "PM" ? (L.value = "AM", r("update:hours", t.hours - 12)) : (L.value = "PM", r("update:hours", t.hours + 12));
    }, q = (l) => {
      b[l] = !0;
    }, te = (l, a, m) => {
      if (l && t.arrowNavigation) {
        Array.isArray(f.value[a]) ? f.value[a][m] = l : f.value[a] = [l];
        const y = f.value.reduce(
          (A, j) => j.map((N, ce) => [...A[ce] || [], j[ce]]),
          []
        );
        d(t.closeTimePickerBtn), $.value && (y[1] = y[1].concat($.value)), s(y, t.order);
      }
    }, R = (l, a) => l === "hours" && !t.is24 ? r(`update:${l}`, L.value === "PM" ? a + 12 : a) : r(`update:${l}`, a);
    return n({ openChildCmp: q }), (l, a) => {
      var m;
      return l.disabled ? D("", !0) : (h(), P("div", Yr, [
        (h(!0), P(fe, null, Me(u(E), (y, A) => {
          var j, N, ce;
          return h(), P("div", {
            key: A,
            class: ge(u(O))
          }, [
            y.separator ? (h(), P(fe, { key: 0 }, [
              je(" : ")
            ], 64)) : (h(), P(fe, { key: 1 }, [
              ae("div", {
                class: ge({
                  dp__inc_dec_button: !0,
                  dp__inc_dec_button_disabled: u(M)(y.type)
                }),
                role: "button",
                "data-test": "time-inc-btn",
                "aria-label": (j = u(p).ariaLabels) == null ? void 0 : j.incrementValue(y.type),
                tabindex: "0",
                onKeydown: [
                  ue((v) => c(y.type), ["enter"]),
                  ue((v) => c(y.type), ["space"])
                ],
                onClick: (v) => c(y.type),
                ref_for: !0,
                ref: (v) => te(v, A, 0)
              }, [
                l.$slots["arrow-up"] ? K(l.$slots, "arrow-up", { key: 0 }) : D("", !0),
                l.$slots["arrow-up"] ? D("", !0) : (h(), me(u(Hn), { key: 1 }))
              ], 42, Vr),
              ae("div", {
                role: "button",
                "aria-label": (N = u(p).ariaLabels) == null ? void 0 : N.openTpOverlay(y.type),
                class: ge(T(y.type) ? "" : "dp__time_display"),
                tabindex: "0",
                "data-test": `${y.type}-toggle-overlay-btn`,
                onKeydown: [
                  ue((v) => Y(y.type), ["enter"]),
                  ue((v) => Y(y.type), ["space"])
                ],
                onClick: (v) => Y(y.type),
                ref_for: !0,
                ref: (v) => te(v, A, 1)
              }, [
                l.$slots[y.type] ? K(l.$slots, y.type, {
                  key: 0,
                  text: u(G)(y.type).text,
                  value: u(G)(y.type).value
                }) : D("", !0),
                l.$slots[y.type] ? D("", !0) : (h(), P(fe, { key: 1 }, [
                  je(_e(u(G)(y.type).text), 1)
                ], 64))
              ], 42, Er),
              ae("div", {
                class: ge({
                  dp__inc_dec_button: !0,
                  dp__inc_dec_button_disabled: u(H)(y.type)
                }),
                role: "button",
                "data-test": "time-dec-btn",
                "aria-label": (ce = u(p).ariaLabels) == null ? void 0 : ce.decrementValue(y.type),
                tabindex: "0",
                onKeydown: [
                  ue((v) => c(y.type, !1), ["enter"]),
                  ue((v) => c(y.type, !1), ["space"])
                ],
                onClick: (v) => c(y.type, !1),
                ref_for: !0,
                ref: (v) => te(v, A, 2)
              }, [
                l.$slots["arrow-down"] ? K(l.$slots, "arrow-down", { key: 0 }) : D("", !0),
                l.$slots["arrow-down"] ? D("", !0) : (h(), me(u(Wn), { key: 1 }))
              ], 42, Lr)
            ], 64))
          ], 2);
        }), 128)),
        l.is24 ? D("", !0) : (h(), P("div", Fr, [
          l.$slots["am-pm-button"] ? K(l.$slots, "am-pm-button", {
            key: 0,
            toggle: W,
            value: L.value
          }) : D("", !0),
          l.$slots["am-pm-button"] ? D("", !0) : (h(), P("button", {
            key: 1,
            ref_key: "amPmButton",
            ref: $,
            type: "button",
            class: "dp__pm_am_button",
            role: "button",
            "aria-label": (m = u(p).ariaLabels) == null ? void 0 : m.amPmButton,
            tabindex: "0",
            onClick: W,
            onKeydown: [
              ue(qe(W, ["prevent"]), ["enter"]),
              ue(qe(W, ["prevent"]), ["space"])
            ]
          }, _e(L.value), 41, Ur))
        ])),
        (h(!0), P(fe, null, Me(u(S), (y, A) => (h(), me(gt, {
          key: A,
          name: u(C)(b[y.type]),
          css: u(I)
        }, {
          default: se(() => [
            b[y.type] ? (h(), me(Dt, {
              key: 0,
              items: le(y.type),
              "disabled-values": u(p).filters.times[y.type].concat(u(de)(y.type)),
              "esc-close": l.escClose,
              "aria-labels": u(p).ariaLabels,
              "hide-navigation": l.hideNavigation,
              "onUpdate:modelValue": (j) => R(y.type, j),
              onSelected: (j) => Y(y.type),
              onToggle: (j) => Y(y.type),
              onResetFlow: a[0] || (a[0] = (j) => l.$emit("reset-flow")),
              type: y.type
            }, Ee({
              "button-icon": se(() => [
                l.$slots["clock-icon"] ? K(l.$slots, "clock-icon", { key: 0 }) : D("", !0),
                l.$slots["clock-icon"] ? D("", !0) : (h(), me(u(Un), { key: 1 }))
              ]),
              _: 2
            }, [
              l.$slots[`${y.type}-overlay-value`] ? {
                name: "item",
                fn: se(({ item: j }) => [
                  K(l.$slots, `${y.type}-overlay-value`, {
                    text: j.text,
                    value: j.value
                  })
                ]),
                key: "0"
              } : void 0
            ]), 1032, ["items", "disabled-values", "esc-close", "aria-labels", "hide-navigation", "onUpdate:modelValue", "onSelected", "onToggle", "type"])) : D("", !0)
          ]),
          _: 2
        }, 1032, ["name", "css"]))), 128))
      ]));
    };
  }
}), Wr = ["aria-label"], zr = { class: "dp__overlay_container dp__container_flex dp__time_picker_overlay_container" }, Kr = {
  key: 1,
  class: "dp__overlay_row"
}, jr = ["aria-label"], xr = /* @__PURE__ */ We({
  __name: "TimePicker",
  props: {
    hours: { type: [Number, Array], default: 0 },
    minutes: { type: [Number, Array], default: 0 },
    seconds: { type: [Number, Array], default: 0 },
    internalModelValue: { type: [Date, Array], default: null },
    ...nt
  },
  emits: [
    "update:hours",
    "update:minutes",
    "update:seconds",
    "mount",
    "reset-flow",
    "overlay-opened",
    "overlay-closed"
  ],
  setup(e, { expose: n, emit: r }) {
    const t = e, { buildMatrix: s, setTimePicker: d } = tt(), p = sn(), { hideNavigationButtons: C, defaults: I } = Le(t), { transitionName: b, showTransition: L } = Ut(I.value.transitions), $ = U(null), f = U(null), M = U([]), H = U(null);
    He(() => {
      r("mount"), !t.timePicker && t.arrowNavigation ? s([Te($.value)], "time") : d(!0, t.timePicker);
    });
    const B = V(() => t.range && t.modelAuto ? Gn(t.internalModelValue) : !0), J = U(!1), O = (c) => ({
      hours: Array.isArray(t.hours) ? t.hours[c] : t.hours,
      minutes: Array.isArray(t.minutes) ? t.minutes[c] : t.minutes,
      seconds: Array.isArray(t.seconds) ? t.seconds[c] : t.seconds
    }), E = V(() => {
      const c = [];
      if (t.range)
        for (let _ = 0; _ < 2; _++)
          c.push(O(_));
      else
        c.push(O(0));
      return c;
    }), S = (c, _ = !1, W = "") => {
      _ || r("reset-flow"), J.value = c, c && r("overlay-opened"), t.arrowNavigation && (d(c), c || r("overlay-closed")), ct(() => {
        W !== "" && M.value[0] && M.value[0].openChildCmp(W);
      });
    }, G = V(() => ({
      dp__button: !0,
      dp__button_bottom: t.autoApply
    })), le = it(p, "timePicker"), oe = (c, _, W) => t.range ? _ === 0 ? [c, E.value[1][W]] : [E.value[0][W], c] : c, de = (c) => {
      r("update:hours", c);
    }, T = (c) => {
      r("update:minutes", c);
    }, Y = (c) => {
      r("update:seconds", c);
    }, F = () => {
      H.value && t.arrowNavigation && H.value.focus({ preventScroll: !0 });
    };
    return n({ toggleTimePicker: S }), (c, _) => {
      var W;
      return h(), P("div", null, [
        c.timePicker ? D("", !0) : Ct((h(), P("div", {
          key: 0,
          class: ge(u(G)),
          role: "button",
          "aria-label": (W = u(I).ariaLabels) == null ? void 0 : W.openTimePicker,
          tabindex: "0",
          "data-test": "open-time-picker-btn",
          ref_key: "openTimePickerBtn",
          ref: $,
          onKeydown: [
            _[0] || (_[0] = ue((q) => S(!0), ["enter"])),
            _[1] || (_[1] = ue((q) => S(!0), ["space"]))
          ],
          onClick: _[2] || (_[2] = (q) => S(!0))
        }, [
          c.$slots["clock-icon"] ? K(c.$slots, "clock-icon", { key: 0 }) : D("", !0),
          c.$slots["clock-icon"] ? D("", !0) : (h(), me(u(Un), { key: 1 }))
        ], 42, Wr)), [
          [_t, !u(C)("time")]
        ]),
        et(gt, {
          name: u(b)(J.value),
          css: u(L)
        }, {
          default: se(() => {
            var q;
            return [
              J.value || c.timePicker ? (h(), P("div", {
                key: 0,
                class: "dp__overlay",
                ref_key: "overlayRef",
                ref: H,
                tabindex: "0"
              }, [
                ae("div", zr, [
                  c.$slots["time-picker-overlay"] ? K(c.$slots, "time-picker-overlay", {
                    key: 0,
                    hours: e.hours,
                    minutes: e.minutes,
                    seconds: e.seconds,
                    setHours: de,
                    setMinutes: T,
                    setSeconds: Y
                  }) : D("", !0),
                  c.$slots["time-picker-overlay"] ? D("", !0) : (h(), P("div", Kr, [
                    (h(!0), P(fe, null, Me(u(E), (te, R) => Ct((h(), me(Hr, Pe({ key: R }, {
                      ...c.$props,
                      order: R,
                      hours: te.hours,
                      minutes: te.minutes,
                      seconds: te.seconds,
                      closeTimePickerBtn: f.value,
                      disabled: R === 0 ? c.fixedStart : c.fixedEnd
                    }, {
                      ref_for: !0,
                      ref_key: "timeInputRefs",
                      ref: M,
                      "onUpdate:hours": (l) => de(oe(l, R, "hours")),
                      "onUpdate:minutes": (l) => T(oe(l, R, "minutes")),
                      "onUpdate:seconds": (l) => Y(oe(l, R, "seconds")),
                      onMounted: F,
                      onOverlayClosed: F
                    }), Ee({ _: 2 }, [
                      Me(u(le), (l, a) => ({
                        name: l,
                        fn: se((m) => [
                          K(c.$slots, l, Ne(Ue(m)))
                        ])
                      }))
                    ]), 1040, ["onUpdate:hours", "onUpdate:minutes", "onUpdate:seconds"])), [
                      [_t, R === 0 ? !0 : u(B)]
                    ])), 128))
                  ])),
                  c.timePicker ? D("", !0) : Ct((h(), P("div", {
                    key: 2,
                    ref_key: "closeTimePickerBtn",
                    ref: f,
                    class: ge(u(G)),
                    role: "button",
                    "aria-label": (q = u(I).ariaLabels) == null ? void 0 : q.closeTimePicker,
                    tabindex: "0",
                    onKeydown: [
                      _[3] || (_[3] = ue((te) => S(!1), ["enter"])),
                      _[4] || (_[4] = ue((te) => S(!1), ["space"]))
                    ],
                    onClick: _[5] || (_[5] = (te) => S(!1))
                  }, [
                    c.$slots["calendar-icon"] ? K(c.$slots, "calendar-icon", { key: 0 }) : D("", !0),
                    c.$slots["calendar-icon"] ? D("", !0) : (h(), me(u(Ft), { key: 1 }))
                  ], 42, jr)), [
                    [_t, !u(C)("time")]
                  ])
                ])
              ], 512)) : D("", !0)
            ];
          }),
          _: 3
        }, 8, ["name", "css"])
      ]);
    };
  }
}), Gr = (e, n) => {
  const { isDisabled: r, matchDate: t, getWeekFromDate: s } = Le(n), d = U(null), p = U(w()), C = (a) => {
    !a.current && n.hideOffsetDates || (d.value = a.value);
  }, I = () => {
    d.value = null;
  }, b = (a) => Array.isArray(e.value) && n.range && e.value[0] && d.value ? a ? Ve(d.value, e.value[0]) : Oe(d.value, e.value[0]) : !0, L = (a, m) => {
    const y = () => e.value ? m ? e.value[0] || null : e.value[1] : null, A = e.value && Array.isArray(e.value) ? y() : null;
    return be(w(a.value), A);
  }, $ = (a) => {
    const m = Array.isArray(e.value) ? e.value[0] : null;
    return a ? !Oe(d.value || null, m) : !0;
  }, f = (a, m = !0) => (n.range || n.weekPicker) && Array.isArray(e.value) ? n.hideOffsetDates && !a.current ? !1 : be(w(a.value), e.value[m ? 0 : 1]) : n.range ? L(a, m) && $(m) || be(a.value, Array.isArray(e.value) ? e.value[0] : null) && b(m) : !1, M = (a, m, y) => Array.isArray(e.value) && e.value[0] && e.value.length === 1 ? a ? !1 : y ? Ve(e.value[0], m.value) : Oe(e.value[0], m.value) : !1, H = (a) => !e.value || n.hideOffsetDates && !a.current ? !1 : n.range ? n.modelAuto && Array.isArray(e.value) ? be(a.value, e.value[0] ? e.value[0] : p.value) : !1 : n.multiDates && Array.isArray(e.value) ? e.value.some((m) => be(m, a.value)) : be(a.value, e.value ? e.value : p.value), B = (a) => {
    if (n.autoRange || n.weekPicker) {
      if (d.value) {
        if (n.hideOffsetDates && !a.current)
          return !1;
        const m = mt(d.value, +n.autoRange), y = s(w(d.value));
        return n.weekPicker ? be(y[1], w(a.value)) : be(m, w(a.value));
      }
      return !1;
    }
    return !1;
  }, J = (a) => {
    if (n.autoRange || n.weekPicker) {
      if (d.value) {
        const m = mt(d.value, +n.autoRange);
        if (n.hideOffsetDates && !a.current)
          return !1;
        const y = s(w(d.value));
        return n.weekPicker ? Ve(a.value, y[0]) && Oe(a.value, y[1]) : Ve(a.value, d.value) && Oe(a.value, m);
      }
      return !1;
    }
    return !1;
  }, O = (a) => {
    if (n.autoRange || n.weekPicker) {
      if (d.value) {
        if (n.hideOffsetDates && !a.current)
          return !1;
        const m = s(w(d.value));
        return n.weekPicker ? be(m[0], a.value) : be(d.value, a.value);
      }
      return !1;
    }
    return !1;
  }, E = (a) => zn(e.value, d.value, a.value), S = () => n.modelAuto && Array.isArray(n.internalModelValue) ? !!n.internalModelValue[0] : !1, G = () => n.modelAuto ? Gn(n.internalModelValue) : !0, le = (a) => {
    if (Array.isArray(e.value) && e.value.length || n.weekPicker)
      return !1;
    const m = n.range ? !f(a) && !f(a, !1) : !0;
    return !r(a.value) && !H(a) && !(!a.current && n.hideOffsetDates) && m;
  }, oe = (a) => n.range ? n.modelAuto ? S() && H(a) : !1 : H(a), de = (a) => n.highlight ? t(a.value, n.highlight) : !1, T = (a) => r(a.value) && n.highlightDisabledDays === !1, Y = (a) => n.highlightWeekDays && n.highlightWeekDays.includes(a.value.getDay()), F = (a) => (n.range || n.weekPicker) && (!(n.multiCalendars > 0) || a.current) && G() && !(!a.current && n.hideOffsetDates) && !H(a) ? E(a) : !1, c = (a) => ({
    dp__cell_offset: !a.current,
    dp__pointer: !n.disabled && !(!a.current && n.hideOffsetDates) && !r(a.value),
    dp__cell_disabled: r(a.value),
    dp__cell_highlight: !T(a) && (de(a) || Y(a)) && !oe(a),
    dp__cell_highlight_active: !T(a) && (de(a) || Y(a)) && oe(a),
    dp__today: !n.noToday && be(a.value, p.value) && a.current
  }), _ = (a) => ({
    dp__active_date: oe(a),
    dp__date_hover: le(a)
  }), W = (a) => ({
    ...q(a),
    ...te(a),
    dp__range_between_week: F(a) && n.weekPicker
  }), q = (a) => ({
    dp__range_start: n.multiCalendars > 0 ? a.current && f(a) && G() : f(a) && G(),
    dp__range_end: n.multiCalendars > 0 ? a.current && f(a, !1) && G() : f(a, !1) && G(),
    dp__range_between: F(a) && !n.weekPicker,
    dp__date_hover_start: M(le(a), a, !0),
    dp__date_hover_end: M(le(a), a, !1)
  }), te = (a) => ({
    ...q(a),
    dp__cell_auto_range: J(a),
    dp__cell_auto_range_start: O(a),
    dp__cell_auto_range_end: B(a)
  }), R = (a) => n.range ? n.autoRange ? te(a) : n.modelAuto ? { ..._(a), ...q(a) } : q(a) : n.weekPicker ? W(a) : _(a);
  return {
    setHoverDate: C,
    clearHoverDate: I,
    getDayClassData: (a) => ({
      ...c(a),
      ...R(a),
      [n.dayClass ? n.dayClass(a.value) : ""]: !0,
      [n.calendarCellClassName]: !!n.calendarCellClassName
    })
  };
}, Zr = ["id", "onKeydown"], Xr = {
  key: 0,
  class: "dp__sidebar_left"
}, qr = {
  key: 1,
  class: "dp__preset_ranges"
}, Jr = ["onClick"], Qr = {
  key: 2,
  class: "dp__sidebar_right"
}, el = {
  key: 3,
  class: "dp__now_wrap"
}, tl = /* @__PURE__ */ We({
  __name: "DatepickerMenu",
  props: {
    openOnTop: { type: Boolean, default: !1 },
    internalModelValue: { type: [Date, Array], default: null },
    ...nt
  },
  emits: [
    "close-picker",
    "select-date",
    "auto-apply",
    "time-update",
    "flow-step",
    "update-month-year",
    "invalid-select",
    "update:internal-model-value",
    "recalculate-position",
    "invalid-fixed-range",
    "tooltip-open",
    "tooltip-close",
    "time-picker-open"
  ],
  setup(e, { expose: n, emit: r }) {
    const t = e, { setMenuFocused: s, setShiftKey: d, control: p } = Kn(), { getCalendarDays: C, defaults: I } = Le(t), b = sn(), L = U(null), $ = $t({
      timePicker: !!(!t.enableTimePicker || t.timePicker || t.monthPicker),
      monthYearInput: !!t.timePicker,
      calendar: !1
    }), f = U([]), M = U([]), H = U(null), B = U(null), J = U(0), O = U(!1), E = U(0);
    He(() => {
      var z;
      O.value = !0, !((z = t.presetRanges) != null && z.length) && !b["left-sidebar"] && !b["right-sidebar"] && ne();
      const g = Te(B);
      if (g && !t.textInput && !t.inline && (s(!0), T()), g) {
        const Ae = ($e) => {
          Object.keys(b).length || $e.preventDefault(), $e.stopImmediatePropagation(), $e.stopPropagation();
        };
        g.addEventListener("pointerdown", Ae), g.addEventListener("mousedown", Ae);
      }
      window.addEventListener("resize", ne);
    }), on(() => {
      window.removeEventListener("resize", ne);
    });
    const { arrowRight: S, arrowLeft: G, arrowDown: le, arrowUp: oe } = tt(), de = (g) => {
      g || g === 0 ? M.value[g].triggerTransition(
        W.value(g),
        q.value(g)
      ) : M.value.forEach(
        (z, Ae) => z.triggerTransition(W.value(Ae), q.value(Ae))
      );
    }, T = () => {
      const g = Te(B);
      g && g.focus({ preventScroll: !0 });
    }, Y = () => {
      var g;
      (g = t.flow) != null && g.length && E.value !== -1 && (E.value += 1, r("flow-step", E.value), k());
    }, F = () => {
      E.value = -1;
    }, {
      calendars: c,
      modelValue: _,
      month: W,
      year: q,
      time: te,
      updateTime: R,
      updateMonthYear: l,
      selectDate: a,
      getWeekNum: m,
      monthYearSelect: y,
      handleScroll: A,
      handleArrow: j,
      handleSwipe: N,
      getMarker: ce,
      selectCurrentDate: v,
      presetDateRange: o
    } = Ja(t, r, Y, de, E), { setHoverDate: Z, clearHoverDate: ee, getDayClassData: we } = Gr(_, t);
    dt(
      c,
      () => {
        t.openOnTop && setTimeout(() => {
          r("recalculate-position");
        }, 0);
      },
      { deep: !0 }
    );
    const ze = it(b, "calendar"), Je = it(b, "action"), re = it(b, "timePicker"), Ge = it(b, "monthYear"), Ke = V(() => t.openOnTop ? "dp__arrow_bottom" : "dp__arrow_top"), Ie = V(() => Ha(t.yearRange)), ht = V(() => Wa(t.locale, t.monthNameFormat)), ne = () => {
      const g = Te(L);
      g && (J.value = g.getBoundingClientRect().width);
    }, ye = V(() => (g) => C(W.value(g), q.value(g))), ve = V(
      () => I.value.multiCalendars > 0 && t.range ? [...Array(I.value.multiCalendars).keys()] : [0]
    ), at = V(
      () => (g) => g === 1
    ), rt = V(() => t.monthPicker || t.timePicker || t.yearPicker), Ht = V(
      () => ({
        dp__flex_display: I.value.multiCalendars > 0
      })
    ), Mt = V(() => ({
      dp__instance_calendar: I.value.multiCalendars > 0
    })), pt = V(() => ({
      dp__menu_disabled: t.disabled,
      dp__menu_readonly: t.readonly
    })), Wt = V(
      () => (g) => Kt(ye, g)
    ), zt = V(
      () => ({
        dp__menu: !0,
        dp__menu_index: !t.inline,
        dp__relative: t.inline,
        [t.menuClassName]: !!t.menuClassName
      })
    ), Kt = (g, z) => g.value(z).map((Ae) => ({
      ...Ae,
      days: Ae.days.map(($e) => ($e.marker = ce($e), $e.classData = we($e), $e))
    })), Tt = (g) => {
      g.stopPropagation(), g.stopImmediatePropagation();
    }, yn = () => {
      t.escClose && r("close-picker");
    }, gn = (g, z = !1) => {
      a(g, z), t.spaceConfirm && r("select-date");
    }, At = (g) => {
      var z;
      (z = t.flow) != null && z.length && ($[g] = !0, Object.keys($).filter((Ae) => !$[Ae]).length || k());
    }, i = (g, z, Ae, $e, ...St) => {
      if (t.flow[E.value] === g) {
        const X = $e ? z.value[0] : z.value;
        X && X[Ae](...St);
      }
    }, k = () => {
      i("month", f, "toggleMonthPicker", !0, !0), i("year", f, "toggleYearPicker", !0, !0), i("calendar", H, "toggleTimePicker", !1, !1, !0), i("time", H, "toggleTimePicker", !1, !0, !0);
      const g = t.flow[E.value];
      (g === "hours" || g === "minutes" || g === "seconds") && i(g, H, "toggleTimePicker", !1, !0, !0, g);
    }, x = (g) => {
      if (t.arrowNavigation) {
        if (g === "up")
          return oe();
        if (g === "down")
          return le();
        if (g === "left")
          return G();
        if (g === "right")
          return S();
      } else
        g === "left" || g === "up" ? j("left", 0, g === "up") : j("right", 0, g === "down");
    }, Q = (g) => {
      d(g.shiftKey), !t.disableMonthYearSelect && g.code === "Tab" && g.target.classList.contains("dp__menu") && p.value.shiftKeyInMenu && (g.preventDefault(), g.stopImmediatePropagation(), r("close-picker"));
    }, De = (g) => {
      f.value[0] && f.value[0].handleMonthYearChange(g);
    };
    return n({
      updateMonthYear: l
    }), (g, z) => {
      var Ae;
      return h(), me(gt, {
        appear: "",
        name: (Ae = u(I).transitions) == null ? void 0 : Ae.menuAppear,
        mode: "out-in",
        css: !!g.transitions
      }, {
        default: se(() => {
          var $e, St;
          return [
            ae("div", {
              id: g.uid ? `dp-menu-${g.uid}` : void 0,
              tabindex: "0",
              ref_key: "dpMenuRef",
              ref: B,
              role: "dialog",
              class: ge(u(zt)),
              onMouseleave: z[15] || (z[15] = //@ts-ignore
              (...X) => u(ee) && u(ee)(...X)),
              onClick: Tt,
              onKeydown: [
                ue(yn, ["esc"]),
                z[16] || (z[16] = ue(qe((X) => x("left"), ["prevent"]), ["left"])),
                z[17] || (z[17] = ue(qe((X) => x("up"), ["prevent"]), ["up"])),
                z[18] || (z[18] = ue(qe((X) => x("down"), ["prevent"]), ["down"])),
                z[19] || (z[19] = ue(qe((X) => x("right"), ["prevent"]), ["right"])),
                Q
              ]
            }, [
              (g.disabled || g.readonly) && g.inline ? (h(), P("div", {
                key: 0,
                class: ge(u(pt))
              }, null, 2)) : D("", !0),
              !g.inline && !g.teleportCenter ? (h(), P("div", {
                key: 1,
                class: ge(u(Ke))
              }, null, 2)) : D("", !0),
              ae("div", {
                class: ge({
                  dp__menu_content_wrapper: (($e = g.presetRanges) == null ? void 0 : $e.length) || !!g.$slots["left-sidebar"] || !!g.$slots["right-sidebar"]
                })
              }, [
                g.$slots["left-sidebar"] ? (h(), P("div", Xr, [
                  K(g.$slots, "left-sidebar", Ne(Ue({ handleMonthYearChange: De })))
                ])) : D("", !0),
                (St = g.presetRanges) != null && St.length ? (h(), P("div", qr, [
                  (h(!0), P(fe, null, Me(g.presetRanges, (X, ft) => (h(), P("div", {
                    key: ft,
                    style: Qe(X.style || {}),
                    class: "dp__preset_range",
                    onClick: (ie) => u(o)(X.range, !!X.slot)
                  }, [
                    X.slot ? K(g.$slots, X.slot, {
                      key: 0,
                      presetDateRange: u(o),
                      label: X.label,
                      range: X.range
                    }) : (h(), P(fe, { key: 1 }, [
                      je(_e(X.label), 1)
                    ], 64))
                  ], 12, Jr))), 128))
                ])) : D("", !0),
                ae("div", {
                  class: "dp__instance_calendar",
                  ref_key: "calendarWrapperRef",
                  ref: L,
                  role: "document"
                }, [
                  ae("div", {
                    class: ge(u(Ht))
                  }, [
                    (h(!0), P(fe, null, Me(u(ve), (X, ft) => (h(), P("div", {
                      key: X,
                      class: ge(u(Mt))
                    }, [
                      !g.disableMonthYearSelect && !g.timePicker ? (h(), me(Br, Pe({
                        key: 0,
                        ref_for: !0,
                        ref: (ie) => {
                          ie && (f.value[ft] = ie);
                        },
                        months: u(ht),
                        years: u(Ie),
                        month: u(W)(X),
                        year: u(q)(X),
                        instance: X,
                        "internal-model-value": e.internalModelValue
                      }, g.$props, {
                        onMount: z[0] || (z[0] = (ie) => At("monthYearInput")),
                        onResetFlow: F,
                        onUpdateMonthYear: (ie) => u(l)(X, ie),
                        onMonthYearSelect: u(y),
                        onOverlayClosed: T
                      }), Ee({ _: 2 }, [
                        Me(u(Ge), (ie, Xn) => ({
                          name: ie,
                          fn: se((jt) => [
                            K(g.$slots, ie, Ne(Ue(jt)))
                          ])
                        }))
                      ]), 1040, ["months", "years", "month", "year", "instance", "internal-model-value", "onUpdateMonthYear", "onMonthYearSelect"])) : D("", !0),
                      et(Dr, Pe({
                        ref_for: !0,
                        ref: (ie) => {
                          ie && (M.value[ft] = ie);
                        },
                        "specific-mode": u(rt),
                        "get-week-num": u(m),
                        instance: X,
                        "mapped-dates": u(Wt)(X),
                        month: u(W)(X),
                        year: u(q)(X)
                      }, g.$props, {
                        "flow-step": E.value,
                        "onUpdate:flowStep": z[1] || (z[1] = (ie) => E.value = ie),
                        onSelectDate: (ie) => u(a)(ie, !u(at)(X)),
                        onHandleSpace: (ie) => gn(ie, !u(at)(X)),
                        onSetHoverDate: z[2] || (z[2] = (ie) => u(Z)(ie)),
                        onHandleScroll: (ie) => u(A)(ie, X),
                        onHandleSwipe: (ie) => u(N)(ie, X),
                        onMount: z[3] || (z[3] = (ie) => At("calendar")),
                        onResetFlow: F,
                        onTooltipOpen: z[4] || (z[4] = (ie) => g.$emit("tooltip-open", ie)),
                        onTooltipClose: z[5] || (z[5] = (ie) => g.$emit("tooltip-close", ie))
                      }), Ee({ _: 2 }, [
                        Me(u(ze), (ie, Xn) => ({
                          name: ie,
                          fn: se((jt) => [
                            K(g.$slots, ie, Ne(Ue({ ...jt })))
                          ])
                        }))
                      ]), 1040, ["specific-mode", "get-week-num", "instance", "mapped-dates", "month", "year", "flow-step", "onSelectDate", "onHandleSpace", "onHandleScroll", "onHandleSwipe"])
                    ], 2))), 128))
                  ], 2),
                  ae("div", null, [
                    g.$slots["time-picker"] ? K(g.$slots, "time-picker", Ne(Pe({ key: 0 }, { time: u(te), updateTime: u(R) }))) : (h(), P(fe, { key: 1 }, [
                      g.enableTimePicker && !g.monthPicker && !g.weekPicker ? (h(), me(xr, Pe({
                        key: 0,
                        ref_key: "timePickerRef",
                        ref: H,
                        hours: u(te).hours,
                        minutes: u(te).minutes,
                        seconds: u(te).seconds,
                        "internal-model-value": e.internalModelValue
                      }, g.$props, {
                        onMount: z[6] || (z[6] = (X) => At("timePicker")),
                        "onUpdate:hours": z[7] || (z[7] = (X) => u(R)(X)),
                        "onUpdate:minutes": z[8] || (z[8] = (X) => u(R)(X, !1)),
                        "onUpdate:seconds": z[9] || (z[9] = (X) => u(R)(X, !1, !0)),
                        onResetFlow: F,
                        onOverlayClosed: T,
                        onOverlayOpened: z[10] || (z[10] = (X) => g.$emit("time-picker-open", X))
                      }), Ee({ _: 2 }, [
                        Me(u(re), (X, ft) => ({
                          name: X,
                          fn: se((ie) => [
                            K(g.$slots, X, Ne(Ue(ie)))
                          ])
                        }))
                      ]), 1040, ["hours", "minutes", "seconds", "internal-model-value"])) : D("", !0)
                    ], 64))
                  ])
                ], 512),
                g.$slots["right-sidebar"] ? (h(), P("div", Qr, [
                  K(g.$slots, "right-sidebar", Ne(Ue({ handleMonthYearChange: De })))
                ])) : D("", !0),
                g.showNowButton ? (h(), P("div", el, [
                  g.$slots["now-button"] ? K(g.$slots, "now-button", {
                    key: 0,
                    selectCurrentDate: u(v)
                  }) : D("", !0),
                  g.$slots["now-button"] ? D("", !0) : (h(), P("button", {
                    key: 1,
                    type: "button",
                    role: "button",
                    class: "dp__now_button",
                    onClick: z[11] || (z[11] = //@ts-ignore
                    (...X) => u(v) && u(v)(...X))
                  }, _e(g.nowButtonLabel), 1))
                ])) : D("", !0)
              ], 2),
              !g.autoApply || g.keepActionRow ? (h(), me(vr, Pe({
                key: 2,
                "menu-mount": O.value,
                "calendar-width": J.value,
                "internal-model-value": e.internalModelValue
              }, g.$props, {
                onClosePicker: z[12] || (z[12] = (X) => g.$emit("close-picker")),
                onSelectDate: z[13] || (z[13] = (X) => g.$emit("select-date")),
                onInvalidSelect: z[14] || (z[14] = (X) => g.$emit("invalid-select"))
              }), Ee({ _: 2 }, [
                Me(u(Je), (X, ft) => ({
                  name: X,
                  fn: se((ie) => [
                    K(g.$slots, X, Ne(Ue({ ...ie })))
                  ])
                }))
              ]), 1040, ["menu-mount", "calendar-width", "internal-model-value"])) : D("", !0)
            ], 42, Zr)
          ];
        }),
        _: 3
      }, 8, ["name", "css"]);
    };
  }
}), nl = typeof window < "u" ? window : void 0, nn = () => {
}, al = (e) => Jn() ? (Qn(e), !0) : !1, rl = (e, n, r, t) => {
  if (!e)
    return nn;
  let s = nn;
  const d = dt(
    () => u(e),
    (C) => {
      s(), C && (C.addEventListener(n, r, t), s = () => {
        C.removeEventListener(n, r, t), s = nn;
      });
    },
    { immediate: !0, flush: "post" }
  ), p = () => {
    d(), s();
  };
  return al(p), p;
}, ll = (e, n, r, t = {}) => {
  const { window: s = nl, event: d = "pointerdown" } = t;
  return s ? rl(s, d, (C) => {
    const I = Te(e), b = Te(n);
    !I || !b || I === C.target || C.composedPath().includes(I) || C.composedPath().includes(b) || r(C);
  }, { passive: !0 }) : void 0;
}, ol = /* @__PURE__ */ We({
  __name: "VueDatePicker",
  props: {
    ...nt
  },
  emits: [
    "update:model-value",
    "text-submit",
    "closed",
    "cleared",
    "open",
    "focus",
    "blur",
    "internal-model-change",
    "recalculate-position",
    "flow-step",
    "update-month-year",
    "invalid-select",
    "invalid-fixed-range",
    "tooltip-open",
    "tooltip-close",
    "time-picker-open"
  ],
  setup(e, { expose: n, emit: r }) {
    const t = e, s = sn(), d = U(!1), p = It(t, "modelValue"), C = It(t, "timezone"), I = U(null), b = U(null), L = U(!1), $ = U(null), { setMenuFocused: f, setShiftKey: M } = Kn(), { clearArrowNav: H } = tt(), { validateDate: B, isValidTime: J, defaults: O } = Le(t);
    He(() => {
      c(t.modelValue), t.inline || (T($.value).addEventListener("scroll", a), window.addEventListener("resize", m)), t.inline && (d.value = !0);
    }), on(() => {
      if (!t.inline) {
        const ne = T($.value);
        ne && ne.removeEventListener("scroll", a), window.removeEventListener("resize", m);
      }
    });
    const E = it(s, "all", t.presetRanges), S = it(s, "input");
    dt(
      [p, C],
      () => {
        c(p.value);
      },
      { deep: !0 }
    );
    const { openOnTop: G, menuPosition: le, setMenuPosition: oe, setInitialPosition: de, getScrollableParent: T } = tr(
      I,
      b,
      r,
      t
    ), {
      inputValue: Y,
      internalModelValue: F,
      parseExternalModelValue: c,
      emitModelValue: _,
      formatInputValue: W,
      checkBeforeEmit: q
    } = Qa(r, t, L), te = V(
      () => ({
        dp__main: !0,
        dp__theme_dark: t.dark,
        dp__theme_light: !t.dark,
        dp__flex_display: t.inline,
        dp__flex_display_with_input: t.inlineWithInput
      })
    ), R = V(() => t.dark ? "dp__theme_dark" : "dp__theme_light"), l = V(() => t.teleport ? {
      to: typeof t.teleport == "boolean" ? "body" : t.teleport,
      disabled: t.inline
    } : { class: "dp__outer_menu_wrap" }), a = () => {
      d.value && (t.closeOnScroll ? ee() : oe());
    }, m = () => {
      d.value && oe();
    }, y = () => {
      !t.disabled && !t.readonly && (de(), d.value = !0, ct().then(() => {
        oe(), d.value && r("open");
      }), d.value || Z(), c(t.modelValue));
    }, A = () => {
      Y.value = "", Z(), r("update:model-value", null), r("cleared"), ee();
    }, j = () => {
      const ne = F.value;
      return !ne || !Array.isArray(ne) && B(ne) ? !0 : Array.isArray(ne) ? ne.length === 2 && B(ne[0]) && B(ne[1]) ? !0 : B(ne[0]) : !1;
    }, N = () => {
      q() && j() ? (_(), ee()) : r("invalid-select", F.value);
    }, ce = (ne) => {
      v(), _(), t.closeOnAutoApply && !ne && ee();
    }, v = () => {
      b.value && t.textInput && b.value.setParsedDate(F.value);
    }, o = (ne = !1) => {
      t.autoApply && J(F.value) && j() && (t.range && Array.isArray(F.value) ? (t.partialRange || F.value.length === 2) && ce(ne) : ce(ne));
    }, Z = () => {
      t.textInput || (F.value = null);
    }, ee = () => {
      t.inline || (d.value && (d.value = !1, f(!1), M(!1), H(), r("closed"), de(), Y.value && c(p.value)), Z(), b.value && b.value.focusInput());
    }, we = (ne, ye) => {
      if (!ne) {
        F.value = null;
        return;
      }
      F.value = ne, ye && (N(), r("text-submit"));
    }, ze = () => {
      t.autoApply && J(F.value) && _(), v();
    }, Je = () => d.value ? ee() : y(), re = (ne) => {
      F.value = ne;
    }, Ge = V(() => t.textInput && O.value.textInputOptions.format), Ke = () => {
      Ge.value && (L.value = !0, W()), r("focus");
    }, Ie = () => {
      Ge.value && (L.value = !1, W()), r("blur");
    }, ht = (ne) => {
      I.value && I.value.updateMonthYear(0, {
        month: _n(ne.month),
        year: _n(ne.year)
      });
    };
    return ll(
      I,
      b,
      t.onClickOutside ? () => t.onClickOutside(j) : ee
    ), n({
      closeMenu: ee,
      selectDate: N,
      clearValue: A,
      openMenu: y,
      onScroll: a,
      formatInputValue: W,
      // exposed for testing purposes
      updateInternalModelValue: re,
      // modify internal modelValue
      setMonthYear: ht
    }), (ne, ye) => (h(), P("div", {
      class: ge(u(te)),
      ref_key: "pickerWrapperRef",
      ref: $
    }, [
      et(ur, Pe({
        ref_key: "inputRef",
        ref: b,
        "is-menu-open": d.value,
        "input-value": u(Y),
        "onUpdate:inputValue": ye[0] || (ye[0] = (ve) => ot(Y) ? Y.value = ve : null)
      }, ne.$props, {
        onClear: A,
        onOpen: y,
        onSetInputDate: we,
        onSetEmptyDate: u(_),
        onSelectDate: N,
        onToggle: Je,
        onClose: ee,
        onFocus: Ke,
        onBlur: Ie
      }), Ee({ _: 2 }, [
        Me(u(S), (ve, at) => ({
          name: ve,
          fn: se((rt) => [
            K(ne.$slots, ve, Ne(Ue(rt)))
          ])
        }))
      ]), 1040, ["is-menu-open", "input-value", "onSetEmptyDate"]),
      d.value ? (h(), me(Bn(ne.teleport ? ea : "div"), Ne(Pe({ key: 0 }, u(l))), {
        default: se(() => [
          d.value ? (h(), me(tl, Pe({
            key: 0,
            ref_key: "dpMenuRef",
            ref: I,
            class: u(R),
            style: u(le),
            "open-on-top": u(G)
          }, ne.$props, {
            "internal-model-value": u(F),
            "onUpdate:internalModelValue": ye[1] || (ye[1] = (ve) => ot(F) ? F.value = ve : null),
            onClosePicker: ee,
            onSelectDate: N,
            onAutoApply: o,
            onTimeUpdate: ze,
            onFlowStep: ye[2] || (ye[2] = (ve) => ne.$emit("flow-step", ve)),
            onUpdateMonthYear: ye[3] || (ye[3] = (ve) => ne.$emit("update-month-year", ve)),
            onInvalidSelect: ye[4] || (ye[4] = (ve) => ne.$emit("invalid-select", u(F))),
            onInvalidFixedRange: ye[5] || (ye[5] = (ve) => ne.$emit("invalid-fixed-range", ve)),
            onRecalculatePosition: u(oe),
            onTooltipOpen: ye[6] || (ye[6] = (ve) => ne.$emit("tooltip-open", ve)),
            onTooltipClose: ye[7] || (ye[7] = (ve) => ne.$emit("tooltip-close", ve)),
            onTimePickerOpen: ye[8] || (ye[8] = (ve) => ne.$emit("time-picker-open", ve))
          }), Ee({ _: 2 }, [
            Me(u(E), (ve, at) => ({
              name: ve,
              fn: se((rt) => [
                K(ne.$slots, ve, Ne(Ue({ ...rt })))
              ])
            }))
          ]), 1040, ["class", "style", "open-on-top", "internal-model-value", "onRecalculatePosition"])) : D("", !0)
        ]),
        _: 3
      }, 16)) : D("", !0)
    ], 2));
  }
}), Zn = /* @__PURE__ */ (() => {
  const e = ol;
  return e.install = (n) => {
    n.component("Vue3DatePicker", e);
  }, e;
})(), sl = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Zn
}, Symbol.toStringTag, { value: "Module" }));
Object.entries(sl).forEach(([e, n]) => {
  e !== "default" && (Zn[e] = n);
});
export {
  Zn as default
};
